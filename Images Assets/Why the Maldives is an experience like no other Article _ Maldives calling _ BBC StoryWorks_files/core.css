/* Non-IE8 media query mixin */
/* Shared */
/*
    https://github.com/csswizardry/inuit.css/blob/master/generic/_mixins.scss
    
    Create vendor-prefixed CSS in one go, e.g.
    @include vendor(border-radius, 4px);
*/
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

button::-moz-focus-inner {
  padding: 0;
  border: 0; }

.pagebuilder {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  .pagebuilder * {
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    box-sizing: border-box; }

html {
  font-size: 62.5%; }

h1,
h2,
h3,
h4,
h5,
h6,
p,
span {
  color: inherit; }

/*
    1. Setting `vertical-align` removes the whitespace that appears under `img`
    elements when they are dropped into a page as-is. Safer alternative to
    using `display: block;`.
*/
img {
  vertical-align: middle;
  /* [1] */ }

@font-face {
  font-family: 'freight';
  src: url("../../../fonts/Freight-Disp-Light.woff2") format("woff2"), url("../../../fonts/Freight-Disp-Light.woff") format("woff");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'lato_light';
  src: url("../../../fonts/Lato-Light.woff2") format("woff2"), url("../../../fonts/Lato-Light.woff") format("woff");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'lato_black';
  src: url("../../../fonts/lato-black.woff2") format("woff2"), url("../../../fonts/lato-black.woff") format("woff");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'lato';
  src: url("../../../fonts/Lato-Regular.woff2") format("woff2"), url("../../../fonts/Lato-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'lato';
  src: url("../../../fonts/lato-bold.woff2") format("woff2"), url("../../../fonts/lato-bold.woff") format("woff");
  font-weight: bold;
  font-style: normal; }
@font-face {
  font-family: 'lato';
  src: url("../../../fonts/lato-italic.woff") format("woff2"), url("../../../fonts/lato-italic.woff2") format("woff");
  font-weight: normal;
  font-style: italic; }
@font-face {
  font-family: 'playfair_display';
  src: url("../../../fonts/playfairdisplay-regular-webfont.eot");
  src: url("../../../fonts/playfairdisplay-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/playfairdisplay-regular-webfont.woff2") format("woff2"), url("../../../fonts/playfairdisplay-regular-webfont.woff") format("woff"), url("../../../fonts/playfairdisplay-regular-webfont.ttf") format("truetype"), url("../../../fonts/playfairdisplay-regular-webfont.svg#playfair_displayregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'playfair_display';
  src: url("../../../fonts/playfairdisplay-bold-webfont.eot");
  src: url("../../../fonts/playfairdisplay-bold-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/playfairdisplay-bold-webfont.woff2") format("woff2"), url("../../../fonts/playfairdisplay-bold-webfont.woff") format("woff"), url("../../../fonts/playfairdisplay-bold-webfont.ttf") format("truetype"), url("../../../fonts/playfairdisplay-bold-webfont.svg#playfair_displaybold") format("svg");
  font-weight: bold;
  font-style: normal; }
@font-face {
  font-family: 'playfair_display';
  src: url("../../../fonts/playfairdisplay-bolditalic-webfont.eot");
  src: url("../../../fonts/playfairdisplay-bolditalic-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/playfairdisplay-bolditalic-webfont.woff2") format("woff2"), url("../../../fonts/playfairdisplay-bolditalic-webfont.woff") format("woff"), url("../../../fonts/playfairdisplay-bolditalic-webfont.ttf") format("truetype"), url("../../../fonts/playfairdisplay-bolditalic-webfont.svg#playfair_displaybold_italic") format("svg");
  font-weight: bold;
  font-style: italic; }
@font-face {
  font-family: 'playfair_display';
  src: url("../../../fonts/playfairdisplay-italic-webfont.eot");
  src: url("../../../fonts/playfairdisplay-italic-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/playfairdisplay-italic-webfont.woff2") format("woff2"), url("../../../fonts/playfairdisplay-italic-webfont.woff") format("woff"), url("../../../fonts/playfairdisplay-italic-webfont.ttf") format("truetype"), url("../../../fonts/playfairdisplay-italic-webfont.svg#playfair_displayitalic") format("svg");
  font-weight: normal;
  font-style: italic; }
@font-face {
  font-family: 'lora';
  src: url("../../../fonts/lora-regular-webfont.eot");
  src: url("../../../fonts/lora-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/lora-regular-webfont.woff2") format("woff2"), url("../../../fonts/lora-regular-webfont.woff") format("woff"), url("../../../fonts/lora-regular-webfont.ttf") format("truetype"), url("../../../fonts/lora-regular-webfont.svg#loraregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'lora';
  src: url("../../../fonts/lora-italic-webfont.eot");
  src: url("../../../fonts/lora-italic-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/lora-italic-webfont.woff2") format("woff2"), url("../../../fonts/lora-italic-webfont.woff") format("woff"), url("../../../fonts/lora-italic-webfont.ttf") format("truetype"), url("../../../fonts/lora-italic-webfont.svg#loraitalic") format("svg");
  font-weight: normal;
  font-style: italic; }
@font-face {
  font-family: 'century_gothicregular';
  src: url("../../../fonts/cgothic-webfont.eot");
  src: url("../../../fonts/cgothic-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/cgothic-webfont.woff2") format("woff2"), url("../../../fonts/cgothic-webfont.woff") format("woff"), url("../../../fonts/cgothic-webfont.ttf") format("truetype"), url("../../../fonts/cgothic-webfont.svg#century_gothicregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'century_gothicbold';
  src: url("../../../fonts/cgothic-bold.eot");
  src: url("../../../fonts/cgothic-bold.eot?#iefix") format("embedded-opentype"), url("../../../fonts/cgothic-bold.woff2") format("woff2"), url("../../../fonts/cgothic-bold.woff") format("woff"), url("../../../fonts/cgothic-bold.ttf") format("truetype"), url("../../../fonts/cgothic-bold.svg#century_gothicregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'arapeyregular';
  src: url("../../../fonts/arapey/arapey-regular-webfont.eot");
  src: url("../../../fonts/arapey/arapey-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/arapey/arapey-regular-webfont.woff2") format("woff2"), url("../../../fonts/arapey/arapey-regular-webfont.woff") format("woff"), url("../../../fonts/arapey/arapey-regular-webfont.ttf") format("truetype"), url("../../../fonts/arapey/arapey-regular-webfont.svg#arapeyregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'gill_sansregular';
  src: url("../../../fonts/gillsans-webfont.eot");
  src: url("../../../fonts/gillsans-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/gillsans-webfont.woff2") format("woff2"), url("../../../fonts/gillsans-webfont.woff") format("woff"), url("../../../fonts/gillsans-webfont.ttf") format("truetype"), url("../../../fonts/gillsans-webfont.svg#gill_sansregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'gillsans_lightregular';
  src: url("../../../fonts/gillsanslight-webfont.eot");
  src: url("../../../fonts/gillsanslight-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/gillsanslight-webfont.woff2") format("woff2"), url("../../../fonts/gillsanslight-webfont.woff") format("woff"), url("../../../fonts/gillsanslight-webfont.ttf") format("truetype"), url("../../../fonts/gillsanslight-webfont.svg#gillsans_lightregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'trajanpro-regular';
  src: url("../../../fonts/trajanpro-regular.eot");
  src: url("../../../fonts/trajanpro-regular.eot?#iefix") format("embedded-opentype"), url("../../../fonts/trajanpro-regular.woff2") format("woff2"), url("../../../fonts/trajanpro-regular.woff") format("woff"), url("../../../fonts/trajanpro-regular.ttf") format("truetype"), url("../../../fonts/trajanpro-regular.svg#TrajanProRegular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'open_sans';
  src: url("../../../fonts/OpenSans-Regular-webfont.eot");
  src: url("../../../fonts/OpenSans-Regular-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/OpenSans-Regular-webfont.woff") format("woff"), url("../../../fonts/OpenSans-Regular-webfont.ttf") format("truetype"), url("../../../fonts/OpenSans-Regular-webfont.svg#open_sansregular") format("svg");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: 'open_sans';
  src: url("../../../fonts/OpenSans-Bold-webfont.eot");
  src: url("../../../fonts/OpenSans-Bold-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/OpenSans-Bold-webfont.woff") format("woff"), url("../../../fonts/OpenSans-Bold-webfont.ttf") format("truetype"), url("../../../fonts/OpenSans-Bold-webfont.svg#open_sansbold") format("svg");
  font-weight: bold;
  font-style: normal; }
@font-face {
  font-family: 'open_sans';
  src: url("../../../fonts/OpenSans-Italic-webfont.eot");
  src: url("../../../fonts/OpenSans-Italic-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/OpenSans-Italic-webfont.woff") format("woff"), url("../../../fonts/OpenSans-Italic-webfont.ttf") format("truetype"), url("../../../fonts/OpenSans-Italic-webfont.svg#open_sansitalic") format("svg");
  font-weight: normal;
  font-style: italic; }
@font-face {
  font-family: 'open_sans';
  src: url("../../../fonts/OpenSans-BoldItalic-webfont.eot");
  src: url("../../../fonts/OpenSans-BoldItalic-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/OpenSans-BoldItalic-webfont.woff") format("woff"), url("../../../fonts/OpenSans-BoldItalic-webfont.ttf") format("truetype"), url("../../../fonts/OpenSans-BoldItalic-webfont.svg#open_sansbold_italic") format("svg");
  font-weight: bold;
  font-style: italic; }
@font-face {
  font-family: 'open_sans';
  src: url("../../../fonts/OpenSans-Semibold-webfont.eot");
  src: url("../../../fonts/OpenSans-Semibold-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/OpenSans-Semibold-webfont.woff") format("woff"), url("../../../fonts/OpenSans-Semibold-webfont.ttf") format("truetype"), url("../../../fonts/OpenSans-Semibold-webfont.svg#open_sanssemibold") format("svg");
  font-weight: 600;
  font-style: normal; }
@font-face {
  font-family: 'open_sans';
  src: url("../../../fonts/OpenSans-SemiboldItalic-webfont.eot");
  src: url("../../../fonts/OpenSans-SemiboldItalic-webfont.eot?#iefix") format("embedded-opentype"), url("../../../fonts/OpenSans-SemiboldItalic-webfont.woff") format("woff"), url("../../../fonts/OpenSans-SemiboldItalic-webfont.ttf") format("truetype"), url("../../../fonts/OpenSans-SemiboldItalic-webfont.svg#open_sanssemibold_italic") format("svg");
  font-weight: 600;
  font-style: italic; }
.bbccom_standard_slot {
  background: transparent !important; }

.AdSlot--leaderboard .bbccom_text {
  color: #bbb !important; }

p,
dl,
ul,
ol {
  margin-bottom: 25px; }

p:last-child {
  margin-bottom: 0; }

ul,
ol {
  margin-left: 40px; }

.PageSidePadding {
  padding-left: 16px;
  padding-right: 16px; }

@media only screen and (min-width: 360px) {
  .smallPlus-PageSidePadding {
    padding-left: 48px;
    padding-right: 48px; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-PageSidePadding {
    padding-left: 48px;
    padding-right: 48px; } }
@media only screen and (min-width: 760px) {
  .largePlus-PageSidePadding {
    padding-left: 16px;
    padding-right: 16px; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-PageSidePadding {
    padding-left: 16px;
    padding-right: 16px; } }
/* 
	Adapted from http://csswizardry.com/2013/05/the-flag-object/
	
	CSS class name Flag__image changed to Arrange_fixed 
	as this object can work with short strings of text as well.

	CSS class name Flag__body changed to Arrange_flexible as it makes
	more sense when used together with Arrange_fixed.
*/
/* 
    Responsive Arrange

    Generates Arrange classes prefixed with $util-breakpoints:

    .hugePlus-Arrange
    .hugePlus-Arrange-fixed
    .hugePlus-Arrange-flexible

    etc.
*/
/* Regular, non-responsive Arrange classes */
.Arrange {
  display: table;
  width: 100%; }

.Arrange-fixed,
.Arrange-flexible {
  display: table-cell;
  vertical-align: middle; }
  .Arrange--top > .Arrange-fixed, .Arrange--top >
  .Arrange-flexible {
    vertical-align: top; }
  .Arrange--bottom > .Arrange-fixed, .Arrange--bottom >
  .Arrange-flexible {
    vertical-align: bottom; }

.Arrange-fixed {
  width: auto; }

.Arrange-flexible {
  width: 100%; }

/* Responsive Arrange classes */
@media only screen and (min-width: 0px) {
  .tinyPlus-Arrange {
    display: table;
    width: 100%; }

  .tinyPlus-Arrange-fixed,
  .tinyPlus-Arrange-flexible {
    display: table-cell;
    vertical-align: middle; }
    .tinyPlus-Arrange--top > .tinyPlus-Arrange-fixed, .tinyPlus-Arrange--top >
    .tinyPlus-Arrange-flexible {
      vertical-align: top; }
    .tinyPlus-Arrange--bottom > .tinyPlus-Arrange-fixed, .tinyPlus-Arrange--bottom >
    .tinyPlus-Arrange-flexible {
      vertical-align: bottom; }

  .tinyPlus-Arrange-fixed {
    width: auto; }

  .tinyPlus-Arrange-flexible {
    width: 100%; } }
@media only screen and (min-width: 360px) {
  .smallPlus-Arrange {
    display: table;
    width: 100%; }

  .smallPlus-Arrange-fixed,
  .smallPlus-Arrange-flexible {
    display: table-cell;
    vertical-align: middle; }
    .smallPlus-Arrange--top > .smallPlus-Arrange-fixed, .smallPlus-Arrange--top >
    .smallPlus-Arrange-flexible {
      vertical-align: top; }
    .smallPlus-Arrange--bottom > .smallPlus-Arrange-fixed, .smallPlus-Arrange--bottom >
    .smallPlus-Arrange-flexible {
      vertical-align: bottom; }

  .smallPlus-Arrange-fixed {
    width: auto; }

  .smallPlus-Arrange-flexible {
    width: 100%; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-Arrange {
    display: table;
    width: 100%; }

  .mediumPlus-Arrange-fixed,
  .mediumPlus-Arrange-flexible {
    display: table-cell;
    vertical-align: middle; }
    .mediumPlus-Arrange--top > .mediumPlus-Arrange-fixed, .mediumPlus-Arrange--top >
    .mediumPlus-Arrange-flexible {
      vertical-align: top; }
    .mediumPlus-Arrange--bottom > .mediumPlus-Arrange-fixed, .mediumPlus-Arrange--bottom >
    .mediumPlus-Arrange-flexible {
      vertical-align: bottom; }

  .mediumPlus-Arrange-fixed {
    width: auto; }

  .mediumPlus-Arrange-flexible {
    width: 100%; } }
@media only screen and (min-width: 760px) {
  .largePlus-Arrange {
    display: table;
    width: 100%; }

  .largePlus-Arrange-fixed,
  .largePlus-Arrange-flexible {
    display: table-cell;
    vertical-align: middle; }
    .largePlus-Arrange--top > .largePlus-Arrange-fixed, .largePlus-Arrange--top >
    .largePlus-Arrange-flexible {
      vertical-align: top; }
    .largePlus-Arrange--bottom > .largePlus-Arrange-fixed, .largePlus-Arrange--bottom >
    .largePlus-Arrange-flexible {
      vertical-align: bottom; }

  .largePlus-Arrange-fixed {
    width: auto; }

  .largePlus-Arrange-flexible {
    width: 100%; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-Arrange {
    display: table;
    width: 100%; }

  .hugePlus-Arrange-fixed,
  .hugePlus-Arrange-flexible {
    display: table-cell;
    vertical-align: middle; }
    .hugePlus-Arrange--top > .hugePlus-Arrange-fixed, .hugePlus-Arrange--top >
    .hugePlus-Arrange-flexible {
      vertical-align: top; }
    .hugePlus-Arrange--bottom > .hugePlus-Arrange-fixed, .hugePlus-Arrange--bottom >
    .hugePlus-Arrange-flexible {
      vertical-align: bottom; }

  .hugePlus-Arrange-fixed {
    width: auto; }

  .hugePlus-Arrange-flexible {
    width: 100%; } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-Arrange {
    display: table;
    width: 100%; }

  .superHugePlus-Arrange-fixed,
  .superHugePlus-Arrange-flexible {
    display: table-cell;
    vertical-align: middle; }
    .superHugePlus-Arrange--top > .superHugePlus-Arrange-fixed, .superHugePlus-Arrange--top >
    .superHugePlus-Arrange-flexible {
      vertical-align: top; }
    .superHugePlus-Arrange--bottom > .superHugePlus-Arrange-fixed, .superHugePlus-Arrange--bottom >
    .superHugePlus-Arrange-flexible {
      vertical-align: bottom; }

  .superHugePlus-Arrange-fixed {
    width: auto; }

  .superHugePlus-Arrange-flexible {
    width: 100%; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-Arrange {
    display: table;
    width: 100%; }

  .aspectRatio15x9to16x9Landscape-Arrange-fixed,
  .aspectRatio15x9to16x9Landscape-Arrange-flexible {
    display: table-cell;
    vertical-align: middle; }
    .aspectRatio15x9to16x9Landscape-Arrange--top > .aspectRatio15x9to16x9Landscape-Arrange-fixed, .aspectRatio15x9to16x9Landscape-Arrange--top >
    .aspectRatio15x9to16x9Landscape-Arrange-flexible {
      vertical-align: top; }
    .aspectRatio15x9to16x9Landscape-Arrange--bottom > .aspectRatio15x9to16x9Landscape-Arrange-fixed, .aspectRatio15x9to16x9Landscape-Arrange--bottom >
    .aspectRatio15x9to16x9Landscape-Arrange-flexible {
      vertical-align: bottom; }

  .aspectRatio15x9to16x9Landscape-Arrange-fixed {
    width: auto; }

  .aspectRatio15x9to16x9Landscape-Arrange-flexible {
    width: 100%; } }
/* 
    Responsive Board with stickies

    Generates Board classes prefixed with $board-breakpoints:

    .Board
    .largePlus-Board
    .largePlus-Board-sticky
	.largePlus-Board-sticky--top

    etc.
*/
/* Regular, non-responsive classes */
.Board {
  position: relative; }

.Board-sticky {
  position: absolute; }

.Board-sticky--top {
  top: 0; }

.Board-sticky--bottom {
  bottom: 0; }

.Board-sticky--left {
  left: 0; }

.Board-sticky--right {
  right: 0; }

/* Responsive classes */
.ButtonReset {
  background: transparent;
  border: 0 none;
  padding: 0;
  cursor: pointer;
  outline: none; }

@media only screen and (min-width: 360px) {
  .smallPlus-Flush {
    margin-left: -16px;
    margin-right: -16px; } }
@media only screen and (min-width: 560px) {
  .smallPlus-Flush,
  .mediumPlus-Flush {
    margin-left: -48px;
    margin-right: -48px; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-Flush {
    margin-left: -48px;
    margin-right: -48px; } }
/* 
    Responsive ListInline

    Generates ListInline classes prefixed with $list-inline-breakpoints:

    .ListInline
    .largePlus-ListInline
    .hugePlus-ListInline

    etc.
*/
/* uncss grunt plugin will remove unused CSS classes */
/* Regular, non-responsive classes */
.ListInline > li {
  display: inline-block; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  .tinyPlus-ListInline > li {
    display: inline-block; } }
@media only screen and (min-width: 360px) {
  .smallPlus-ListInline > li {
    display: inline-block; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-ListInline > li {
    display: inline-block; } }
@media only screen and (min-width: 760px) {
  .largePlus-ListInline > li {
    display: inline-block; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-ListInline > li {
    display: inline-block; } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-ListInline > li {
    display: inline-block; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-ListInline > li {
    display: inline-block; } }
.ListReset {
  padding-left: 0;
  margin: 0;
  list-style-type: none; }

.PageWidth {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto; }
  @media only screen and (min-width: 760px) {
    .PageWidth {
      max-width: 1008px; } }
  @media only screen and (min-width: 1280px) {
    .PageWidth {
      max-width: 1280px; } }

html,
body {
  height: 100%;
  width: 100%; }

.StickyFooter {
  display: table;
  width: 100%;
  height: 100%; }

.StickyFooter-footer {
  width: 100%;
  display: table-row;
  height: 1px;
  overflow: hidden; }

/* Regular, non-responsive classes */
.Table {
  display: table; }

.Table-row {
  display: table-row-group; }

.Table-footer {
  display: table-footer-group; }

.Table-header {
  display: table-header-group; }

/* Responsive classes */
@media only screen and (min-width: 760px) {
  .largePlus-Table {
    display: table; }

  .largePlus-Table-row {
    display: table-row-group; }

  .largePlus-Table-footer {
    display: table-footer-group; }

  .largePlus-Table-header {
    display: table-header-group; } }
video {
  max-width: 100%;
  height: auto; }

.Video {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px;
  height: 0;
  overflow: hidden; }

.Video iframe,
.Video object,
.Video embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

/* 
    Adapted and modified from the best of 2 grids:

    - SUIT CSS Grid
    - csswizardry-grids

    Generates grid classes prefixed with $grid-breakpoints:

    .Grid
    .largePlus-u-Grid
    .hugePlus-u-Grid

    etc.
*/
/* Regular, non-responsive classes */
/*
    Core grid component
    
    DO NOT apply dimension or offset utilities to the `Grid` element. All cell
    widths and offsets should be applied to child grid cells.
*/
/*
    All content must be contained within child `Grid-cell` elements.
    
    1. Account for browser defaults of elements that might be the root node of
       the component.
    2. Ensure consistent default alignment.
    3. Allow the Grid system to be used on lists.
*/
.Grid {
  display: block;
  /* [1] */
  margin: 0;
  /* [1] */
  padding: 0;
  /* [1] */
  text-align: left;
  /* [2] */
  list-style: none;
  /* [3] */
  vertical-align: top; }

/*
    Modifier: center align all grid cells
*/
.Grid--alignCenter {
  text-align: center; }

/*
    Modifier: left align all grid cells.
    Useful when need to overwrite a right/center aligned grid item for a breakpoint
*/
.Grid--alignLeft {
  text-align: left; }

/*
    Modifier: right align all grid cells
*/
.Grid--alignRight {
  text-align: right; }

/*
    Modifier: middle-align grid cells
*/
.Grid--alignMiddle > .Grid-cell {
  vertical-align: middle; }

/*
    Modifier: top-align grid cells
    Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
*/
.Grid--alignTop > .Grid-cell {
  vertical-align: top; }

/*
    Modifier: bottom-align grid cells
*/
.Grid--alignBottom > .Grid-cell {
  vertical-align: bottom; }

/*
    Modifier: no gutters
*/
.Grid--noGutter {
  margin-left: 0; }

.Grid--noGutter > .Grid-cell {
  padding-left: 0; }

/*
    Modifier: medium gutters
*/
.Grid--mediumGutter {
  margin-left: -16px; }
  .Grid--mediumGutter > .Grid-cell {
    padding-left: 16px; }

/*
    Modifier: small gutters
*/
.Grid--smallGutter {
  margin-left: -8px; }
  .Grid--smallGutter > .Grid-cell {
    padding-left: 8px; }

/*
    Modifier: large gutters
*/
.Grid--largeGutter {
  margin-left: -24px; }
  .Grid--largeGutter > .Grid-cell {
    padding-left: 24px; }

/*
    Modifier: extra large gutters
*/
.Grid--xLargeGutter {
  margin-left: -32px; }
  .Grid--xLargeGutter > .Grid-cell {
    padding-left: 32px; }

/*
    Modifier: normal order of Grid items, as they are structured in your source
*/
.Grid--orderNormal {
  direction: ltr;
  text-align: left; }
  .Grid--orderNormal > .Grid-cell {
    direction: ltr; }

/*
    Modifier: Reversed Grids allow you to structure your source in the opposite order to
    how your rendered layout will appear
*/
.Grid--orderReversed {
  direction: rtl;
  text-align: left; }
  .Grid--orderReversed > .Grid-cell {
    direction: ltr; }

/*
    No explicit width by default. Rely on combining `Grid-cell` with a dimension
    utility or a component class that extends 'grid'.
    
    1. Fundamentals of the non-float grid layout.
    2. Keeps content correctly aligned with the grid direction.
    3. Controls vertical positioning of units.
    4. Make cells full-width by default.
*/
.Grid-cell {
  display: inline-block;
  /* [1] */
  margin: 0;
  padding: 0;
  text-align: left;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */ }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  /*
      Core grid component
      
      DO NOT apply dimension or offset utilities to the `Grid` element. All cell
      widths and offsets should be applied to child grid cells.
  */
  /*
      All content must be contained within child `Grid-cell` elements.
      
      1. Account for browser defaults of elements that might be the root node of
         the component.
      2. Ensure consistent default alignment.
      3. Allow the Grid system to be used on lists.
  */
  .tinyPlus-Grid {
    display: block;
    /* [1] */
    margin: 0;
    /* [1] */
    padding: 0;
    /* [1] */
    text-align: left;
    /* [2] */
    list-style: none;
    /* [3] */
    vertical-align: top; }

  /*
      Modifier: center align all grid cells
  */
  .tinyPlus-Grid--alignCenter {
    text-align: center; }

  /*
      Modifier: left align all grid cells.
      Useful when need to overwrite a right/center aligned grid item for a breakpoint
  */
  .tinyPlus-Grid--alignLeft {
    text-align: left; }

  /*
      Modifier: right align all grid cells
  */
  .tinyPlus-Grid--alignRight {
    text-align: right; }

  /*
      Modifier: middle-align grid cells
  */
  .tinyPlus-Grid--alignMiddle > .tinyPlus-Grid-cell {
    vertical-align: middle; }

  /*
      Modifier: top-align grid cells
      Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
  */
  .tinyPlus-Grid--alignTop > .tinyPlus-Grid-cell {
    vertical-align: top; }

  /*
      Modifier: bottom-align grid cells
  */
  .tinyPlus-Grid--alignBottom > .tinyPlus-Grid-cell {
    vertical-align: bottom; }

  /*
      Modifier: no gutters
  */
  .tinyPlus-Grid--noGutter {
    margin-left: 0; }

  .tinyPlus-Grid--noGutter > .tinyPlus-Grid-cell {
    padding-left: 0; }

  /*
      Modifier: medium gutters
  */
  .tinyPlus-Grid--mediumGutter {
    margin-left: -16px; }
    .tinyPlus-Grid--mediumGutter > .tinyPlus-Grid-cell {
      padding-left: 16px; }

  /*
      Modifier: small gutters
  */
  .tinyPlus-Grid--smallGutter {
    margin-left: -8px; }
    .tinyPlus-Grid--smallGutter > .tinyPlus-Grid-cell {
      padding-left: 8px; }

  /*
      Modifier: large gutters
  */
  .tinyPlus-Grid--largeGutter {
    margin-left: -24px; }
    .tinyPlus-Grid--largeGutter > .tinyPlus-Grid-cell {
      padding-left: 24px; }

  /*
      Modifier: extra large gutters
  */
  .tinyPlus-Grid--xLargeGutter {
    margin-left: -32px; }
    .tinyPlus-Grid--xLargeGutter > .tinyPlus-Grid-cell {
      padding-left: 32px; }

  /*
      Modifier: normal order of Grid items, as they are structured in your source
  */
  .tinyPlus-Grid--orderNormal {
    direction: ltr;
    text-align: left; }
    .tinyPlus-Grid--orderNormal > .tinyPlus-Grid-cell {
      direction: ltr; }

  /*
      Modifier: Reversed Grids allow you to structure your source in the opposite order to
      how your rendered layout will appear
  */
  .tinyPlus-Grid--orderReversed {
    direction: rtl;
    text-align: left; }
    .tinyPlus-Grid--orderReversed > .tinyPlus-Grid-cell {
      direction: ltr; }

  /*
      No explicit width by default. Rely on combining `Grid-cell` with a dimension
      utility or a component class that extends 'grid'.
      
      1. Fundamentals of the non-float grid layout.
      2. Keeps content correctly aligned with the grid direction.
      3. Controls vertical positioning of units.
      4. Make cells full-width by default.
  */
  .tinyPlus-Grid-cell {
    display: inline-block;
    /* [1] */
    margin: 0;
    padding: 0;
    text-align: left;
    /* [2] */
    vertical-align: top;
    /* [3] */
    width: 100%;
    /* [4] */ } }
@media only screen and (min-width: 360px) {
  /*
      Core grid component
      
      DO NOT apply dimension or offset utilities to the `Grid` element. All cell
      widths and offsets should be applied to child grid cells.
  */
  /*
      All content must be contained within child `Grid-cell` elements.
      
      1. Account for browser defaults of elements that might be the root node of
         the component.
      2. Ensure consistent default alignment.
      3. Allow the Grid system to be used on lists.
  */
  .smallPlus-Grid {
    display: block;
    /* [1] */
    margin: 0;
    /* [1] */
    padding: 0;
    /* [1] */
    text-align: left;
    /* [2] */
    list-style: none;
    /* [3] */
    vertical-align: top; }

  /*
      Modifier: center align all grid cells
  */
  .smallPlus-Grid--alignCenter {
    text-align: center; }

  /*
      Modifier: left align all grid cells.
      Useful when need to overwrite a right/center aligned grid item for a breakpoint
  */
  .smallPlus-Grid--alignLeft {
    text-align: left; }

  /*
      Modifier: right align all grid cells
  */
  .smallPlus-Grid--alignRight {
    text-align: right; }

  /*
      Modifier: middle-align grid cells
  */
  .smallPlus-Grid--alignMiddle > .smallPlus-Grid-cell {
    vertical-align: middle; }

  /*
      Modifier: top-align grid cells
      Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
  */
  .smallPlus-Grid--alignTop > .smallPlus-Grid-cell {
    vertical-align: top; }

  /*
      Modifier: bottom-align grid cells
  */
  .smallPlus-Grid--alignBottom > .smallPlus-Grid-cell {
    vertical-align: bottom; }

  /*
      Modifier: no gutters
  */
  .smallPlus-Grid--noGutter {
    margin-left: 0; }

  .smallPlus-Grid--noGutter > .smallPlus-Grid-cell {
    padding-left: 0; }

  /*
      Modifier: medium gutters
  */
  .smallPlus-Grid--mediumGutter {
    margin-left: -16px; }
    .smallPlus-Grid--mediumGutter > .smallPlus-Grid-cell {
      padding-left: 16px; }

  /*
      Modifier: small gutters
  */
  .smallPlus-Grid--smallGutter {
    margin-left: -8px; }
    .smallPlus-Grid--smallGutter > .smallPlus-Grid-cell {
      padding-left: 8px; }

  /*
      Modifier: large gutters
  */
  .smallPlus-Grid--largeGutter {
    margin-left: -24px; }
    .smallPlus-Grid--largeGutter > .smallPlus-Grid-cell {
      padding-left: 24px; }

  /*
      Modifier: extra large gutters
  */
  .smallPlus-Grid--xLargeGutter {
    margin-left: -32px; }
    .smallPlus-Grid--xLargeGutter > .smallPlus-Grid-cell {
      padding-left: 32px; }

  /*
      Modifier: normal order of Grid items, as they are structured in your source
  */
  .smallPlus-Grid--orderNormal {
    direction: ltr;
    text-align: left; }
    .smallPlus-Grid--orderNormal > .smallPlus-Grid-cell {
      direction: ltr; }

  /*
      Modifier: Reversed Grids allow you to structure your source in the opposite order to
      how your rendered layout will appear
  */
  .smallPlus-Grid--orderReversed {
    direction: rtl;
    text-align: left; }
    .smallPlus-Grid--orderReversed > .smallPlus-Grid-cell {
      direction: ltr; }

  /*
      No explicit width by default. Rely on combining `Grid-cell` with a dimension
      utility or a component class that extends 'grid'.
      
      1. Fundamentals of the non-float grid layout.
      2. Keeps content correctly aligned with the grid direction.
      3. Controls vertical positioning of units.
      4. Make cells full-width by default.
  */
  .smallPlus-Grid-cell {
    display: inline-block;
    /* [1] */
    margin: 0;
    padding: 0;
    text-align: left;
    /* [2] */
    vertical-align: top;
    /* [3] */
    width: 100%;
    /* [4] */ } }
@media only screen and (min-width: 560px) {
  /*
      Core grid component
      
      DO NOT apply dimension or offset utilities to the `Grid` element. All cell
      widths and offsets should be applied to child grid cells.
  */
  /*
      All content must be contained within child `Grid-cell` elements.
      
      1. Account for browser defaults of elements that might be the root node of
         the component.
      2. Ensure consistent default alignment.
      3. Allow the Grid system to be used on lists.
  */
  .mediumPlus-Grid {
    display: block;
    /* [1] */
    margin: 0;
    /* [1] */
    padding: 0;
    /* [1] */
    text-align: left;
    /* [2] */
    list-style: none;
    /* [3] */
    vertical-align: top; }

  /*
      Modifier: center align all grid cells
  */
  .mediumPlus-Grid--alignCenter {
    text-align: center; }

  /*
      Modifier: left align all grid cells.
      Useful when need to overwrite a right/center aligned grid item for a breakpoint
  */
  .mediumPlus-Grid--alignLeft {
    text-align: left; }

  /*
      Modifier: right align all grid cells
  */
  .mediumPlus-Grid--alignRight {
    text-align: right; }

  /*
      Modifier: middle-align grid cells
  */
  .mediumPlus-Grid--alignMiddle > .mediumPlus-Grid-cell {
    vertical-align: middle; }

  /*
      Modifier: top-align grid cells
      Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
  */
  .mediumPlus-Grid--alignTop > .mediumPlus-Grid-cell {
    vertical-align: top; }

  /*
      Modifier: bottom-align grid cells
  */
  .mediumPlus-Grid--alignBottom > .mediumPlus-Grid-cell {
    vertical-align: bottom; }

  /*
      Modifier: no gutters
  */
  .mediumPlus-Grid--noGutter {
    margin-left: 0; }

  .mediumPlus-Grid--noGutter > .mediumPlus-Grid-cell {
    padding-left: 0; }

  /*
      Modifier: medium gutters
  */
  .mediumPlus-Grid--mediumGutter {
    margin-left: -16px; }
    .mediumPlus-Grid--mediumGutter > .mediumPlus-Grid-cell {
      padding-left: 16px; }

  /*
      Modifier: small gutters
  */
  .mediumPlus-Grid--smallGutter {
    margin-left: -8px; }
    .mediumPlus-Grid--smallGutter > .mediumPlus-Grid-cell {
      padding-left: 8px; }

  /*
      Modifier: large gutters
  */
  .mediumPlus-Grid--largeGutter {
    margin-left: -24px; }
    .mediumPlus-Grid--largeGutter > .mediumPlus-Grid-cell {
      padding-left: 24px; }

  /*
      Modifier: extra large gutters
  */
  .mediumPlus-Grid--xLargeGutter {
    margin-left: -32px; }
    .mediumPlus-Grid--xLargeGutter > .mediumPlus-Grid-cell {
      padding-left: 32px; }

  /*
      Modifier: normal order of Grid items, as they are structured in your source
  */
  .mediumPlus-Grid--orderNormal {
    direction: ltr;
    text-align: left; }
    .mediumPlus-Grid--orderNormal > .mediumPlus-Grid-cell {
      direction: ltr; }

  /*
      Modifier: Reversed Grids allow you to structure your source in the opposite order to
      how your rendered layout will appear
  */
  .mediumPlus-Grid--orderReversed {
    direction: rtl;
    text-align: left; }
    .mediumPlus-Grid--orderReversed > .mediumPlus-Grid-cell {
      direction: ltr; }

  /*
      No explicit width by default. Rely on combining `Grid-cell` with a dimension
      utility or a component class that extends 'grid'.
      
      1. Fundamentals of the non-float grid layout.
      2. Keeps content correctly aligned with the grid direction.
      3. Controls vertical positioning of units.
      4. Make cells full-width by default.
  */
  .mediumPlus-Grid-cell {
    display: inline-block;
    /* [1] */
    margin: 0;
    padding: 0;
    text-align: left;
    /* [2] */
    vertical-align: top;
    /* [3] */
    width: 100%;
    /* [4] */ } }
@media only screen and (min-width: 760px) {
  /*
      Core grid component
      
      DO NOT apply dimension or offset utilities to the `Grid` element. All cell
      widths and offsets should be applied to child grid cells.
  */
  /*
      All content must be contained within child `Grid-cell` elements.
      
      1. Account for browser defaults of elements that might be the root node of
         the component.
      2. Ensure consistent default alignment.
      3. Allow the Grid system to be used on lists.
  */
  .largePlus-Grid {
    display: block;
    /* [1] */
    margin: 0;
    /* [1] */
    padding: 0;
    /* [1] */
    text-align: left;
    /* [2] */
    list-style: none;
    /* [3] */
    vertical-align: top; }

  /*
      Modifier: center align all grid cells
  */
  .largePlus-Grid--alignCenter {
    text-align: center; }

  /*
      Modifier: left align all grid cells.
      Useful when need to overwrite a right/center aligned grid item for a breakpoint
  */
  .largePlus-Grid--alignLeft {
    text-align: left; }

  /*
      Modifier: right align all grid cells
  */
  .largePlus-Grid--alignRight {
    text-align: right; }

  /*
      Modifier: middle-align grid cells
  */
  .largePlus-Grid--alignMiddle > .largePlus-Grid-cell {
    vertical-align: middle; }

  /*
      Modifier: top-align grid cells
      Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
  */
  .largePlus-Grid--alignTop > .largePlus-Grid-cell {
    vertical-align: top; }

  /*
      Modifier: bottom-align grid cells
  */
  .largePlus-Grid--alignBottom > .largePlus-Grid-cell {
    vertical-align: bottom; }

  /*
      Modifier: no gutters
  */
  .largePlus-Grid--noGutter {
    margin-left: 0; }

  .largePlus-Grid--noGutter > .largePlus-Grid-cell {
    padding-left: 0; }

  /*
      Modifier: medium gutters
  */
  .largePlus-Grid--mediumGutter {
    margin-left: -16px; }
    .largePlus-Grid--mediumGutter > .largePlus-Grid-cell {
      padding-left: 16px; }

  /*
      Modifier: small gutters
  */
  .largePlus-Grid--smallGutter {
    margin-left: -8px; }
    .largePlus-Grid--smallGutter > .largePlus-Grid-cell {
      padding-left: 8px; }

  /*
      Modifier: large gutters
  */
  .largePlus-Grid--largeGutter {
    margin-left: -24px; }
    .largePlus-Grid--largeGutter > .largePlus-Grid-cell {
      padding-left: 24px; }

  /*
      Modifier: extra large gutters
  */
  .largePlus-Grid--xLargeGutter {
    margin-left: -32px; }
    .largePlus-Grid--xLargeGutter > .largePlus-Grid-cell {
      padding-left: 32px; }

  /*
      Modifier: normal order of Grid items, as they are structured in your source
  */
  .largePlus-Grid--orderNormal {
    direction: ltr;
    text-align: left; }
    .largePlus-Grid--orderNormal > .largePlus-Grid-cell {
      direction: ltr; }

  /*
      Modifier: Reversed Grids allow you to structure your source in the opposite order to
      how your rendered layout will appear
  */
  .largePlus-Grid--orderReversed {
    direction: rtl;
    text-align: left; }
    .largePlus-Grid--orderReversed > .largePlus-Grid-cell {
      direction: ltr; }

  /*
      No explicit width by default. Rely on combining `Grid-cell` with a dimension
      utility or a component class that extends 'grid'.
      
      1. Fundamentals of the non-float grid layout.
      2. Keeps content correctly aligned with the grid direction.
      3. Controls vertical positioning of units.
      4. Make cells full-width by default.
  */
  .largePlus-Grid-cell {
    display: inline-block;
    /* [1] */
    margin: 0;
    padding: 0;
    text-align: left;
    /* [2] */
    vertical-align: top;
    /* [3] */
    width: 100%;
    /* [4] */ } }
@media only screen and (min-width: 1024px) {
  /*
      Core grid component
      
      DO NOT apply dimension or offset utilities to the `Grid` element. All cell
      widths and offsets should be applied to child grid cells.
  */
  /*
      All content must be contained within child `Grid-cell` elements.
      
      1. Account for browser defaults of elements that might be the root node of
         the component.
      2. Ensure consistent default alignment.
      3. Allow the Grid system to be used on lists.
  */
  .hugePlus-Grid {
    display: block;
    /* [1] */
    margin: 0;
    /* [1] */
    padding: 0;
    /* [1] */
    text-align: left;
    /* [2] */
    list-style: none;
    /* [3] */
    vertical-align: top; }

  /*
      Modifier: center align all grid cells
  */
  .hugePlus-Grid--alignCenter {
    text-align: center; }

  /*
      Modifier: left align all grid cells.
      Useful when need to overwrite a right/center aligned grid item for a breakpoint
  */
  .hugePlus-Grid--alignLeft {
    text-align: left; }

  /*
      Modifier: right align all grid cells
  */
  .hugePlus-Grid--alignRight {
    text-align: right; }

  /*
      Modifier: middle-align grid cells
  */
  .hugePlus-Grid--alignMiddle > .hugePlus-Grid-cell {
    vertical-align: middle; }

  /*
      Modifier: top-align grid cells
      Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
  */
  .hugePlus-Grid--alignTop > .hugePlus-Grid-cell {
    vertical-align: top; }

  /*
      Modifier: bottom-align grid cells
  */
  .hugePlus-Grid--alignBottom > .hugePlus-Grid-cell {
    vertical-align: bottom; }

  /*
      Modifier: no gutters
  */
  .hugePlus-Grid--noGutter {
    margin-left: 0; }

  .hugePlus-Grid--noGutter > .hugePlus-Grid-cell {
    padding-left: 0; }

  /*
      Modifier: medium gutters
  */
  .hugePlus-Grid--mediumGutter {
    margin-left: -16px; }
    .hugePlus-Grid--mediumGutter > .hugePlus-Grid-cell {
      padding-left: 16px; }

  /*
      Modifier: small gutters
  */
  .hugePlus-Grid--smallGutter {
    margin-left: -8px; }
    .hugePlus-Grid--smallGutter > .hugePlus-Grid-cell {
      padding-left: 8px; }

  /*
      Modifier: large gutters
  */
  .hugePlus-Grid--largeGutter {
    margin-left: -24px; }
    .hugePlus-Grid--largeGutter > .hugePlus-Grid-cell {
      padding-left: 24px; }

  /*
      Modifier: extra large gutters
  */
  .hugePlus-Grid--xLargeGutter {
    margin-left: -32px; }
    .hugePlus-Grid--xLargeGutter > .hugePlus-Grid-cell {
      padding-left: 32px; }

  /*
      Modifier: normal order of Grid items, as they are structured in your source
  */
  .hugePlus-Grid--orderNormal {
    direction: ltr;
    text-align: left; }
    .hugePlus-Grid--orderNormal > .hugePlus-Grid-cell {
      direction: ltr; }

  /*
      Modifier: Reversed Grids allow you to structure your source in the opposite order to
      how your rendered layout will appear
  */
  .hugePlus-Grid--orderReversed {
    direction: rtl;
    text-align: left; }
    .hugePlus-Grid--orderReversed > .hugePlus-Grid-cell {
      direction: ltr; }

  /*
      No explicit width by default. Rely on combining `Grid-cell` with a dimension
      utility or a component class that extends 'grid'.
      
      1. Fundamentals of the non-float grid layout.
      2. Keeps content correctly aligned with the grid direction.
      3. Controls vertical positioning of units.
      4. Make cells full-width by default.
  */
  .hugePlus-Grid-cell {
    display: inline-block;
    /* [1] */
    margin: 0;
    padding: 0;
    text-align: left;
    /* [2] */
    vertical-align: top;
    /* [3] */
    width: 100%;
    /* [4] */ } }
@media only screen and (min-width: 1280px) {
  /*
      Core grid component
      
      DO NOT apply dimension or offset utilities to the `Grid` element. All cell
      widths and offsets should be applied to child grid cells.
  */
  /*
      All content must be contained within child `Grid-cell` elements.
      
      1. Account for browser defaults of elements that might be the root node of
         the component.
      2. Ensure consistent default alignment.
      3. Allow the Grid system to be used on lists.
  */
  .superHugePlus-Grid {
    display: block;
    /* [1] */
    margin: 0;
    /* [1] */
    padding: 0;
    /* [1] */
    text-align: left;
    /* [2] */
    list-style: none;
    /* [3] */
    vertical-align: top; }

  /*
      Modifier: center align all grid cells
  */
  .superHugePlus-Grid--alignCenter {
    text-align: center; }

  /*
      Modifier: left align all grid cells.
      Useful when need to overwrite a right/center aligned grid item for a breakpoint
  */
  .superHugePlus-Grid--alignLeft {
    text-align: left; }

  /*
      Modifier: right align all grid cells
  */
  .superHugePlus-Grid--alignRight {
    text-align: right; }

  /*
      Modifier: middle-align grid cells
  */
  .superHugePlus-Grid--alignMiddle > .superHugePlus-Grid-cell {
    vertical-align: middle; }

  /*
      Modifier: top-align grid cells
      Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
  */
  .superHugePlus-Grid--alignTop > .superHugePlus-Grid-cell {
    vertical-align: top; }

  /*
      Modifier: bottom-align grid cells
  */
  .superHugePlus-Grid--alignBottom > .superHugePlus-Grid-cell {
    vertical-align: bottom; }

  /*
      Modifier: no gutters
  */
  .superHugePlus-Grid--noGutter {
    margin-left: 0; }

  .superHugePlus-Grid--noGutter > .superHugePlus-Grid-cell {
    padding-left: 0; }

  /*
      Modifier: medium gutters
  */
  .superHugePlus-Grid--mediumGutter {
    margin-left: -16px; }
    .superHugePlus-Grid--mediumGutter > .superHugePlus-Grid-cell {
      padding-left: 16px; }

  /*
      Modifier: small gutters
  */
  .superHugePlus-Grid--smallGutter {
    margin-left: -8px; }
    .superHugePlus-Grid--smallGutter > .superHugePlus-Grid-cell {
      padding-left: 8px; }

  /*
      Modifier: large gutters
  */
  .superHugePlus-Grid--largeGutter {
    margin-left: -24px; }
    .superHugePlus-Grid--largeGutter > .superHugePlus-Grid-cell {
      padding-left: 24px; }

  /*
      Modifier: extra large gutters
  */
  .superHugePlus-Grid--xLargeGutter {
    margin-left: -32px; }
    .superHugePlus-Grid--xLargeGutter > .superHugePlus-Grid-cell {
      padding-left: 32px; }

  /*
      Modifier: normal order of Grid items, as they are structured in your source
  */
  .superHugePlus-Grid--orderNormal {
    direction: ltr;
    text-align: left; }
    .superHugePlus-Grid--orderNormal > .superHugePlus-Grid-cell {
      direction: ltr; }

  /*
      Modifier: Reversed Grids allow you to structure your source in the opposite order to
      how your rendered layout will appear
  */
  .superHugePlus-Grid--orderReversed {
    direction: rtl;
    text-align: left; }
    .superHugePlus-Grid--orderReversed > .superHugePlus-Grid-cell {
      direction: ltr; }

  /*
      No explicit width by default. Rely on combining `Grid-cell` with a dimension
      utility or a component class that extends 'grid'.
      
      1. Fundamentals of the non-float grid layout.
      2. Keeps content correctly aligned with the grid direction.
      3. Controls vertical positioning of units.
      4. Make cells full-width by default.
  */
  .superHugePlus-Grid-cell {
    display: inline-block;
    /* [1] */
    margin: 0;
    padding: 0;
    text-align: left;
    /* [2] */
    vertical-align: top;
    /* [3] */
    width: 100%;
    /* [4] */ } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  /*
      Core grid component
      
      DO NOT apply dimension or offset utilities to the `Grid` element. All cell
      widths and offsets should be applied to child grid cells.
  */
  /*
      All content must be contained within child `Grid-cell` elements.
      
      1. Account for browser defaults of elements that might be the root node of
         the component.
      2. Ensure consistent default alignment.
      3. Allow the Grid system to be used on lists.
  */
  .aspectRatio15x9to16x9Landscape-Grid {
    display: block;
    /* [1] */
    margin: 0;
    /* [1] */
    padding: 0;
    /* [1] */
    text-align: left;
    /* [2] */
    list-style: none;
    /* [3] */
    vertical-align: top; }

  /*
      Modifier: center align all grid cells
  */
  .aspectRatio15x9to16x9Landscape-Grid--alignCenter {
    text-align: center; }

  /*
      Modifier: left align all grid cells.
      Useful when need to overwrite a right/center aligned grid item for a breakpoint
  */
  .aspectRatio15x9to16x9Landscape-Grid--alignLeft {
    text-align: left; }

  /*
      Modifier: right align all grid cells
  */
  .aspectRatio15x9to16x9Landscape-Grid--alignRight {
    text-align: right; }

  /*
      Modifier: middle-align grid cells
  */
  .aspectRatio15x9to16x9Landscape-Grid--alignMiddle > .aspectRatio15x9to16x9Landscape-Grid-cell {
    vertical-align: middle; }

  /*
      Modifier: top-align grid cells
      Useful when need to overwrite a bottom/middle aligned grid item for a breakpoint
  */
  .aspectRatio15x9to16x9Landscape-Grid--alignTop > .aspectRatio15x9to16x9Landscape-Grid-cell {
    vertical-align: top; }

  /*
      Modifier: bottom-align grid cells
  */
  .aspectRatio15x9to16x9Landscape-Grid--alignBottom > .aspectRatio15x9to16x9Landscape-Grid-cell {
    vertical-align: bottom; }

  /*
      Modifier: no gutters
  */
  .aspectRatio15x9to16x9Landscape-Grid--noGutter {
    margin-left: 0; }

  .aspectRatio15x9to16x9Landscape-Grid--noGutter > .aspectRatio15x9to16x9Landscape-Grid-cell {
    padding-left: 0; }

  /*
      Modifier: medium gutters
  */
  .aspectRatio15x9to16x9Landscape-Grid--mediumGutter {
    margin-left: -16px; }
    .aspectRatio15x9to16x9Landscape-Grid--mediumGutter > .aspectRatio15x9to16x9Landscape-Grid-cell {
      padding-left: 16px; }

  /*
      Modifier: small gutters
  */
  .aspectRatio15x9to16x9Landscape-Grid--smallGutter {
    margin-left: -8px; }
    .aspectRatio15x9to16x9Landscape-Grid--smallGutter > .aspectRatio15x9to16x9Landscape-Grid-cell {
      padding-left: 8px; }

  /*
      Modifier: large gutters
  */
  .aspectRatio15x9to16x9Landscape-Grid--largeGutter {
    margin-left: -24px; }
    .aspectRatio15x9to16x9Landscape-Grid--largeGutter > .aspectRatio15x9to16x9Landscape-Grid-cell {
      padding-left: 24px; }

  /*
      Modifier: extra large gutters
  */
  .aspectRatio15x9to16x9Landscape-Grid--xLargeGutter {
    margin-left: -32px; }
    .aspectRatio15x9to16x9Landscape-Grid--xLargeGutter > .aspectRatio15x9to16x9Landscape-Grid-cell {
      padding-left: 32px; }

  /*
      Modifier: normal order of Grid items, as they are structured in your source
  */
  .aspectRatio15x9to16x9Landscape-Grid--orderNormal {
    direction: ltr;
    text-align: left; }
    .aspectRatio15x9to16x9Landscape-Grid--orderNormal > .aspectRatio15x9to16x9Landscape-Grid-cell {
      direction: ltr; }

  /*
      Modifier: Reversed Grids allow you to structure your source in the opposite order to
      how your rendered layout will appear
  */
  .aspectRatio15x9to16x9Landscape-Grid--orderReversed {
    direction: rtl;
    text-align: left; }
    .aspectRatio15x9to16x9Landscape-Grid--orderReversed > .aspectRatio15x9to16x9Landscape-Grid-cell {
      direction: ltr; }

  /*
      No explicit width by default. Rely on combining `Grid-cell` with a dimension
      utility or a component class that extends 'grid'.
      
      1. Fundamentals of the non-float grid layout.
      2. Keeps content correctly aligned with the grid direction.
      3. Controls vertical positioning of units.
      4. Make cells full-width by default.
  */
  .aspectRatio15x9to16x9Landscape-Grid-cell {
    display: inline-block;
    /* [1] */
    margin: 0;
    padding: 0;
    text-align: left;
    /* [2] */
    vertical-align: top;
    /* [3] */
    width: 100%;
    /* [4] */ } }
.Icon {
  background-position: 0 0;
  background-repeat: no-repeat;
  display: inline-block; }

.ResponsiveContainer {
  position: relative; }

.ResponsiveContainer--ratio1 {
  padding-top: 56.25%; }

.ResponsiveContainer--ratio2 {
  padding-top: 73.68%; }

.ResponsiveContainer--ratio3 {
  padding-top: 75%; }

.ResponsiveContainer-content {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: block;
  height: auto;
  width: 100%; }

.ResponsiveContainer,
.ResponsiveContainer-content {
  overflow: hidden; }

.BodyText {
  margin-bottom: 30px;
  position: relative;
  z-index: 1; }
  @media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
    .BodyText {
      z-index: auto; } }

.BodyText-introTitle {
  margin-bottom: 20px; }

.BodyText-sideImageMeta {
  margin-top: 15px; }

.BodyText-sideBox {
  margin-top: 60px; }
  .BodyText-sideBox:first-child {
    margin-top: 0; }

.BodyText-sideBar {
  margin-bottom: 60px; }

.BodyText-media {
  margin-bottom: 45px;
  margin-top: 20px; }

.BodyText-introContent {
  margin-bottom: 20px; }

@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .BodyText-media-wrapper {
    z-index: 100; } }
@media only screen and (min-width: 760px) {
  .BodyText-sideBar {
    margin-right: 16px;
    width: 296px;
    margin-bottom: 0; }

  .BodyText-sideImage {
    border-right: 1px solid; }

  .BodyText-sideImageInner {
    padding-right: 16px; } }
@media only screen and (min-width: 1024px) {
  .BodyText-content blockquote {
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 45px;
    width: 85%; } }
.Hero {
  margin-bottom: 10px;
  position: relative;
  z-index: 1; }

@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .Hero--video {
    z-index: auto; } }

.Hero-inner {
  padding-top: 56.25%;
  position: relative;
  width: 100%; }
  .Hero-inner.Hero-inner--resized {
    padding-top: 0; }

.Hero--video .Hero-inner {
  padding-top: 0; }
  @media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
    .Hero--video .Hero-inner {
      z-index: 100; } }

.Hero-intro {
  margin-bottom: 30px; }

.Hero-image-cover {
  display: none; }

.Hero-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat;
  background-position: center 0;
  background-size: cover; }

.Hero-fill {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%; }

.Hero-ambient-video-html {
  overflow: hidden; }

.Hero-intro-container {
  margin-left: auto;
  margin-right: auto;
  max-width: 1080px; }

.Hero-intro-text {
  text-align: left; }

.Hero-subTitle {
  margin-top: 20px; }

.Hero-ambient-video {
  width: 100%;
  height: 100%;
  position: absolute;
  object-fit: cover;
  z-index: 1; }

@supports (-webkit-touch-callout: none) {
  /* CSS specific to iOS devices */
  .Hero-ambient-video-html {
    display: none; } }
.Hero-ambient-video .ResponsiveContainer {
  width: 100%;
  height: 100%; }

.Hero-videoButton {
  background-image: url("../../../img/video/v2/video_play_button.png");
  background-image: none, url("../../../img/video/v2/video_play_button.svg");
  background-size: cover;
  left: 50%;
  margin-left: -40px;
  margin-top: -40px;
  position: absolute;
  height: 80px;
  top: 50%;
  width: 80px; }

.hero-video-icon {
  position: absolute;
  left: 50%;
  top: 50%;
  z-index: 5; }

.no-js .Hero-videoButton {
  display: none; }

body:not(.bbccom_mpu) .Hero-adSlot {
  display: none; }

@media only screen and (min-width: 760px) {
  .Hero--video .Hero-inner {
    padding-top: 56.25%; }

  .Hero {
    margin-bottom: 15px; }

  .Hero-subTitle {
    margin-top: 30px; }

  .Hero-subHeading {
    margin-top: 8px; }

  .Hero-intro {
    max-width: 824px;
    margin-left: auto;
    margin-right: auto; }

  .Hero-contentInner {
    margin-left: auto;
    margin-right: auto;
    max-width: 826px; }

  .Hero-video {
    background: rgba(0, 0, 0, 0.7);
    height: 100%;
    left: -99999em;
    padding: 1px 0 20px;
    position: absolute;
    top: 0;
    width: 100%; }
    .Hero-video.is-active {
      left: 0;
      visibility: visible; }

  .Hero-video-container {
    margin: 0 auto;
    width: 69%; }
    .Hero-video-container:before {
      background: rgba(0, 0, 0, 0);
      bottom: 0;
      content: '';
      cursor: default;
      display: block;
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
      height: 100%; }

  .Hero-videoButton {
    margin-left: -55px;
    margin-top: -55px;
    height: 110px;
    width: 110px; }

  body:not(.bbccom_mpu) .Hero-adSlot-block {
    width: 100%; } }
@media only screen and (min-width: 1024px) {
  .Hero {
    margin-bottom: 30px; }

  .Hero-image-cover {
    display: block; }

  .Hero-content {
    position: absolute;
    bottom: 56px;
    width: 100%;
    z-index: 1; }

  .Hero-videoButton {
    margin-left: -80px;
    margin-top: -80px;
    height: 160px;
    width: 160px; } }
@media only screen and (min-width: 1280px) {
  .Hero--video .Hero-inner {
    padding-top: 0; } }
@media (min-width: 1025px) and (max-width: 1635px) and (min-height: 815px) and (max-height: 1088px) {
  .Hero-ambient-video {
    width: 133%; } }
@media (min-width: 1025px) and (max-width: 1635px) and (min-height: 740px) and (max-height: 815px) {
  .Hero-ambient-video {
    width: 116%; } }
@media (min-width: 1025px) and (max-width: 1635px) and (min-height: 710px) and (max-height: 740px) {
  .Hero-ambient-video {
    width: 105%; } }
@media (min-width: 1025px) and (max-width: 2005px) and (min-height: 1088px) and (max-height: 1600px) {
  .Hero-ambient-video {
    width: 153%; } }
.Hero-scrollTo {
  background: url("../../../../img/mobile_scrollto_bk.png");
  display: block;
  padding: 20px 0;
  position: relative; }
  .Hero-scrollTo:after {
    content: '';
    display: block;
    height: 17px;
    background-image: url("../../../../img/arrow_scrollto.png");
    background-image: none, url("../../../../img/arrow_scrollto.svg");
    margin: 0 auto;
    position: relative;
    width: 35px; }

@media only screen and (min-width: 760px) {
  .Hero-scrollTo {
    background: none;
    padding: 0;
    margin-top: 30px; }
    .Hero-scrollTo:after {
      background-image: url("../../../../img/scroll_to_arrow_red.png");
      background-repeat: no-repeat;
      height: 65px;
      margin-bottom: -88.5px;
      width: 196px;
      background-size: 196px 65px; }
      .backgroundsize .Hero-scrollTo:after {
        background-image: url("../../../../img/scroll_to_arrow_red@2x.png"); } }
@media only screen and (min-width: 1024px) {
  .Hero-scrollTo:after {
    margin-bottom: -60.5px; } }
/*  Looking for .Island-bottom styles?
    The .Island-bottom class is applied to every component and was adding an unnecessary
    margin (white gap) below each. So rather than copying every single partial
    for v2 and removing this class, I've removed the styles.
    I've also removed it from components that have already been copied into PBv2.
    I will apply the necessary margins and borders within the component theme CSS.
*/
.PartnerBar-feature {
  line-height: 1;
  font-size: 8px;
  font-size: 0.8rem;
  font-family: "century_gothicregular", Helvetica, Arial, sans-serif;
  white-space: nowrap; }

.PartnerBar-logo {
  margin-left: 20px;
  display: block;
  min-width: 88px; }
  .TopBar-PartnerBar .PartnerBar-logo {
    margin-left: 8px; }

@media only screen and (min-width: 1024px) {
  .TopBar-PartnerBar .PartnerBar-feature {
    font-size: 10px;
    font-size: 1rem;
    line-height: 1; } }
@media only screen and (min-width: 760px) {
  .TopBar-PartnerBar .PartnerBar-logo {
    margin-left: 16px; } }
.PullQuote-content {
  padding-top: 20px;
  position: relative; }

.PullQuote-content:before {
  content: '\201C';
  display: block;
  margin-left: -10px;
  line-height: .5;
  position: absolute;
  top: 0; }

.PullQuote-ruleStylish {
  margin: 15px 0; }

@media only screen and (min-width: 760px) {
  .PullQuote {
    border-right: 1px solid; }

  .PullQuote-content:before {
    margin-left: -15px;
    line-height: 0.7; }

  .PullQuote-meta {
    margin-bottom: 0;
    display: table-cell; }

  .PullQuote-meta,
  .PullQuote-content {
    padding-right: 16px; }

  .PullQuote-content {
    padding-top: 45px;
    padding-bottom: 10px; } }
.Rule {
  border-style: none none solid;
  border-color: inherit;
  border-width: 1px;
  display: block; }

.RuleStylish {
  border-style: none none solid;
  border-width: 2px;
  width: 60px;
  display: block; }

.Card-contentRuleStylish {
  margin-top: 35px;
  margin-bottom: 30px; }

.Card-imageWrap {
  margin-left: 0;
  margin-right: 0;
  margin-bottom: 15px; }

.Card-buttonArrow {
  bottom: 0;
  right: 0;
  position: absolute;
  padding: 12px 20px; }

.Card .Card-buttonArrow {
  display: none; }

.Card-content {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%;
  padding: 0 16px; }

.Card-content .container {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1; }

@media only screen and (min-width: 760px) {
  .Card-imageWrap {
    margin-bottom: 0; }

  .Card-col2 {
    padding-bottom: 60px; }

  .Card-iconArrowPrimary {
    bottom: 0;
    left: 50%;
    margin-left: 24px;
    position: absolute; } }
.TitleGroup {
  max-width: 800px;
  margin-left: auto;
  margin-right: auto; }

.TitleGroup-titleSecondary {
  margin-bottom: 10px; }

.Quote {
  margin-top: 35px; }

.Quote-content {
  padding-top: 40px;
  position: relative; }

.Quote-content:before {
  content: '\201C';
  display: block;
  margin-left: -10px;
  line-height: .7;
  position: absolute;
  top: 0; }

.Fill--transparentBlack1 {
  background: url(../../img/transparent/10_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.1); }

.Fill--transparentWhite1 {
  background: url(../../img/transparent/10_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.1); }

.Fill--transparentBlack2 {
  background: url(../../img/transparent/20_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.2); }

.Fill--transparentWhite2 {
  background: url(../../img/transparent/20_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.2); }

.Fill--transparentBlack3 {
  background: url(../../img/transparent/30_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.3); }

.Fill--transparentWhite3 {
  background: url(../../img/transparent/30_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.3); }

.Fill--transparentBlack4 {
  background: url(../../img/transparent/40_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.4); }

.Fill--transparentWhite4 {
  background: url(../../img/transparent/40_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.4); }

.Fill--transparentBlack5 {
  background: url(../../img/transparent/50_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.5); }

.Fill--transparentWhite5 {
  background: url(../../img/transparent/50_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.5); }

.Fill--transparentBlack6 {
  background: url(../../img/transparent/60_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.6); }

.Fill--transparentWhite6 {
  background: url(../../img/transparent/60_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.6); }

.Fill--transparentBlack7 {
  background: url(../../img/transparent/70_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.7); }

.Fill--transparentWhite7 {
  background: url(../../img/transparent/70_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.7); }

.Fill--transparentBlack8 {
  background: url(../../img/transparent/80_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.8); }

.Fill--transparentWhite8 {
  background: url(../../img/transparent/80_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.8); }

.Fill--transparentBlack9 {
  background: url(../../img/transparent/90_black.png) 0 0 repeat transparent;
  background: rgba(0, 0, 0, 0.9); }

.Fill--transparentWhite9 {
  background: url(../../img/transparent/90_white.png) 0 0 repeat transparent;
  background: rgba(255, 255, 255, 0.9); }

.IconArrow {
  width: 17px;
  height: 33px; }

.IconArrow--primary {
  background-image: url("../../../img/arrow_navigation_red.png");
  background-image: none, url("../../../img/arrow_navigation_red.svg"); }

.IconArrow--secondary {
  background-image: url("../../../img/arrow_navigation_white.png");
  background-image: none, url("../../../img/arrow_navigation_white.svg"); }

.IconArrowDown {
  border-style: solid;
  border-width: 4px 4px 0 4px;
  border-color: #ffffff transparent transparent transparent;
  height: 0;
  width: 0; }

.IconArrowDown--inverted {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg); }

.TopBar {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  color: #fff;
  font-family: "century_gothicregular", Helvetica, Arial, sans-serif;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  line-height: 1;
  padding: 0;
  position: relative;
  z-index: 100;
  width: 100%; }

.TopBar--black {
  background: #000; }

.TopBar-inner {
  width: 100%; }

.TopBar-logo-container {
  overflow: hidden; }

.TopBar-logo {
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transform: translateX(-35px);
      -ms-transform: translateX(-35px);
          transform: translateX(-35px);
  transition: -webkit-transform 0.2s;
  transition: transform 0.2s;
  transition: transform 0.2s, -webkit-transform 0.2s;
  width: 100%;
  white-space: nowrap; }
  .js-is-sticky .TopBar-logo, .js-is-stuck .TopBar-logo {
    -webkit-transform: translateX(0);
        -ms-transform: translateX(0);
            transform: translateX(0); }

.TopBar-text {
  display: none;
  padding-right: 15px; }

.TopBar-link:last-child {
  padding-right: 0; }

.TopBar-secondaryLink {
  bottom: -40px;
  margin-left: 10px;
  position: absolute;
  overflow: hidden;
  right: 0; }

.TopBar-inner-container {
  padding-bottom: 12px;
  padding-top: 12px; }

@media (max-width: 400px) {
  .TopBar-inner-container {
    padding-left: 4px;
    padding-right: 4px; } }
@media only screen and (min-width: 360px) {
  .TopBar-logo {
    -webkit-transform: translateX(-67px);
        -ms-transform: translateX(-67px);
            transform: translateX(-67px); } }
@media only screen and (min-width: 560px) {
  .TopBar {
    padding: 0; }

  .TopBar-logo {
    -webkit-transform: translateX(-80px);
        -ms-transform: translateX(-80px);
            transform: translateX(-80px); } }
@media only screen and (min-width: 760px) {
  .TopBar-text {
    display: block;
    padding-right: 0; } }
@media only screen and (min-width: 1024px) {
  .TopBar-text {
    display: block;
    padding-right: 0; }

  .TopBar-secondaryLink {
    bottom: auto;
    margin-left: 10px;
    position: static;
    overflow: visible;
    right: auto; } }
.BottomBar {
  padding: 20px 0;
  color: #fff;
  font-family: "century_gothicregular", Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-size: 12px;
  font-size: 1.2rem; }

.BottomBar--black {
  background: #000; }

.BottomBar-strong {
  font-family: "century_gothicbold", Helvetica, Arial, sans-serif; }

.BottomBar-link {
  text-decoration: none; }

.LogoVertical {
  vertical-align: middle;
  white-space: nowrap; }

.LogoVertical--small {
  height: 20px;
  background-size: auto 20px; }

.LogoVertical--medium {
  background-size: auto 30px;
  height: 30px; }

.LogoVertical--bbc {
  background-image: url("../../../img/logos-vertical/v2/bbc_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_logo.svg");
  width: 60px;
  height: 17px;
  background-size: 60px 17px;
  display: inline-block; }
  .LogoVertical--bbc.LogoVertical--xsmall {
    width: 35px;
    height: 10px;
    background-size: 35px 10px;
    display: inline-block; }
  .LogoVertical--bbc.LogoVertical--small {
    width: 67px;
    height: 19px;
    background-size: 67px 19px;
    display: inline-block; }
  .LogoVertical--bbc.LogoVertical--medium {
    width: 80px;
    height: 23px;
    background-size: 80px 23px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--bbc.smallPlus-LogoVertical--small {
      width: 67px;
      height: 19px;
      background-size: 67px 19px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--bbc.mediumPlus-LogoVertical--medium {
      width: 80px;
      height: 23px;
      background-size: 80px 23px;
      display: inline-block; } }

.LogoVertical--storyworks, .LogoVertical--default {
  background-image: url("../../../img/logos-vertical/v2/bbc_sw_logo_white.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_sw_logo_white.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s;
  margin-top: 5px; }
  .TopBar.js-is-sticky .LogoVertical--storyworks, .TopBar.js-is-stuck .LogoVertical--storyworks,
  .TopBar.js-is-sticky .LogoVertical--default, .TopBar.js-is-stuck .LogoVertical--default {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--storyworks.LogoVertical--xsmall, .LogoVertical--default.LogoVertical--xsmall {
    width: 80px;
    height: 17px;
    background-size: 80px 17px;
    display: inline-block; }
  .LogoVertical--storyworks.LogoVertical--small, .LogoVertical--default.LogoVertical--small {
    width: 92px;
    height: 22px;
    background-size: 92px 22px;
    display: inline-block; }
  .LogoVertical--storyworks.LogoVertical--medium, .LogoVertical--default.LogoVertical--medium {
    width: 151px;
    height: 32px;
    background-size: 151px 32px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--storyworks.smallPlus-LogoVertical--small, .LogoVertical--default.smallPlus-LogoVertical--small {
      width: 92px;
      height: 22px;
      background-size: 92px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--storyworks.mediumPlus-LogoVertical--medium, .LogoVertical--default.mediumPlus-LogoVertical--medium {
      width: 151px;
      height: 32px;
      background-size: 151px 32px;
      display: inline-block; } }

.LogoVertical--travel {
  background-image: url("../../../img/logos-vertical/v2/bbc_travel_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_travel_logo.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }
  .TopBar.js-is-sticky .LogoVertical--travel, .TopBar.js-is-stuck .LogoVertical--travel {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--travel.LogoVertical--xsmall {
    width: 57px;
    height: 17px;
    background-size: 57px 17px;
    display: inline-block; }
  .LogoVertical--travel.LogoVertical--small {
    width: 74px;
    height: 22px;
    background-size: 74px 22px;
    display: inline-block; }
  .LogoVertical--travel.LogoVertical--medium {
    width: 91px;
    height: 27px;
    background-size: 91px 27px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--travel.smallPlus-LogoVertical--small {
      width: 74px;
      height: 22px;
      background-size: 74px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--travel.mediumPlus-LogoVertical--medium {
      width: 91px;
      height: 27px;
      background-size: 91px 27px;
      display: inline-block; } }

.LogoVertical--future {
  background-image: url("../../../img/logos-vertical/v2/bbc_future_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_future_logo.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }
  .TopBar.js-is-sticky .LogoVertical--future, .TopBar.js-is-stuck .LogoVertical--future {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--future.LogoVertical--xsmall {
    width: 59px;
    height: 17px;
    background-size: 59px 17px;
    display: inline-block; }
  .LogoVertical--future.LogoVertical--small {
    width: 76px;
    height: 22px;
    background-size: 76px 22px;
    display: inline-block; }
  .LogoVertical--future.LogoVertical--medium {
    width: 94px;
    height: 27px;
    background-size: 94px 27px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--future.smallPlus-LogoVertical--small {
      width: 76px;
      height: 22px;
      background-size: 76px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--future.mediumPlus-LogoVertical--medium {
      width: 94px;
      height: 27px;
      background-size: 94px 27px;
      display: inline-block; } }

.LogoVertical--capital {
  background-image: url("../../../img/logos-vertical/v2/bbc_capital_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_capital_logo.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }
  .TopBar.js-is-sticky .LogoVertical--capital, .TopBar.js-is-stuck .LogoVertical--capital {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--capital.LogoVertical--xsmall {
    width: 59px;
    height: 17px;
    background-size: 59px 17px;
    display: inline-block; }
  .LogoVertical--capital.LogoVertical--small {
    width: 76px;
    height: 22px;
    background-size: 76px 22px;
    display: inline-block; }
  .LogoVertical--capital.LogoVertical--medium {
    width: 94px;
    height: 27px;
    background-size: 94px 27px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--capital.smallPlus-LogoVertical--small {
      width: 76px;
      height: 22px;
      background-size: 76px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--capital.mediumPlus-LogoVertical--medium {
      width: 94px;
      height: 27px;
      background-size: 94px 27px;
      display: inline-block; } }

.LogoVertical--autos {
  background-image: url("../../../img/logos-vertical/v2/bbc_autos_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_autos_logo.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }
  .TopBar.js-is-sticky .LogoVertical--autos, .TopBar.js-is-stuck .LogoVertical--autos {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--autos.LogoVertical--xsmall {
    width: 62px;
    height: 17px;
    background-size: 62px 17px;
    display: inline-block; }
  .LogoVertical--autos.LogoVertical--small {
    width: 76px;
    height: 22px;
    background-size: 76px 22px;
    display: inline-block; }
  .LogoVertical--autos.LogoVertical--medium {
    width: 95px;
    height: 26px;
    background-size: 95px 26px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--autos.smallPlus-LogoVertical--small {
      width: 76px;
      height: 22px;
      background-size: 76px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--autos.mediumPlus-LogoVertical--medium {
      width: 95px;
      height: 26px;
      background-size: 95px 26px;
      display: inline-block; } }

.LogoVertical--culture {
  background-image: url("../../../img/logos-vertical/v2/bbc_culture_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_culture_logo.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }
  .TopBar.js-is-sticky .LogoVertical--culture, .TopBar.js-is-stuck .LogoVertical--culture {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--culture.LogoVertical--xsmall {
    width: 70px;
    height: 17px;
    background-size: 70px 17px;
    display: inline-block; }
  .LogoVertical--culture.LogoVertical--small {
    width: 91px;
    height: 22px;
    background-size: 91px 22px;
    display: inline-block; }
  .LogoVertical--culture.LogoVertical--medium {
    width: 112px;
    height: 27px;
    background-size: 112px 27px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--culture.smallPlus-LogoVertical--small {
      width: 91px;
      height: 22px;
      background-size: 91px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--culture.mediumPlus-LogoVertical--medium {
      width: 112px;
      height: 27px;
      background-size: 112px 27px;
      display: inline-block; } }

.LogoVertical--earth {
  background-image: url("../../../img/logos-vertical/v2/bbc_earth_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_earth_logo.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }
  .TopBar.js-is-sticky .LogoVertical--earth, .TopBar.js-is-stuck .LogoVertical--earth {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--earth.LogoVertical--xsmall {
    width: 54px;
    height: 17px;
    background-size: 54px 17px;
    display: inline-block; }
  .LogoVertical--earth.LogoVertical--small {
    width: 70px;
    height: 22px;
    background-size: 70px 22px;
    display: inline-block; }
  .LogoVertical--earth.LogoVertical--medium {
    width: 87px;
    height: 27px;
    background-size: 87px 27px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--earth.smallPlus-LogoVertical--small {
      width: 70px;
      height: 22px;
      background-size: 70px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--earth.mediumPlus-LogoVertical--medium {
      width: 87px;
      height: 27px;
      background-size: 87px 27px;
      display: inline-block; } }

.LogoVertical--sport {
  background-image: url("../../../img/logos-vertical/v2/bbc_sport_logo.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_sport_logo.svg");
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s; }
  .TopBar.js-is-sticky .LogoVertical--sport, .TopBar.js-is-stuck .LogoVertical--sport {
    -webkit-transform: scale(0.8);
        -ms-transform: scale(0.8);
            transform: scale(0.8); }
  .LogoVertical--sport.LogoVertical--xsmall {
    width: 54px;
    height: 17px;
    background-size: 54px 17px;
    display: inline-block; }
  .LogoVertical--sport.LogoVertical--small {
    width: 70px;
    height: 22px;
    background-size: 70px 22px;
    display: inline-block; }
  .LogoVertical--sport.LogoVertical--medium {
    width: 98px;
    height: 25px;
    background-size: 98px 25px;
    display: inline-block; }
  @media only screen and (min-width: 360px) {
    .LogoVertical--sport.smallPlus-LogoVertical--small {
      width: 70px;
      height: 22px;
      background-size: 70px 22px;
      display: inline-block; } }
  @media only screen and (min-width: 560px) {
    .LogoVertical--sport.mediumPlus-LogoVertical--medium {
      width: 98px;
      height: 25px;
      background-size: 98px 25px;
      display: inline-block; } }

.LogoVertical--advertiser-content {
  background-image: url("../../../img/logos-vertical/v2/bbc_advertiser_content.png");
  background-image: none, url("../../../img/logos-vertical/v2/bbc_advertiser_content.svg");
  margin-top: 5px; }
  .LogoVertical--advertiser-content.LogoVertical--xsmall {
    width: 125px;
    height: 34px;
    background-size: 125px 34px; }

.CallToAction {
  padding-bottom: 30px;
  background: black;
  background: linear-gradient(180deg, black 25%, #353535 75%); }

.CallToAction-ruleTop {
  margin-bottom: 30px; }

.CallToAction-ruleBottom {
  margin-top: 40px; }

.CallToAction-header {
  margin-bottom: 20px; }

.CallToAction-partnerLogo {
  margin-left: 10px; }
  .CallToAction-partnerLogo .PartnerLogo {
    max-width: 100px;
    max-height: 40px; }

.CallToAction-content {
  margin-bottom: 35px;
  color: #fff; }

.CallToAction-button {
  padding: 20px; }

.CallToAction-headline {
  margin-bottom: 8px; }

.CallToAction-content p {
  margin-bottom: 8px; }

.CallToAction-partnerText {
  width: 150px;
  color: #fff; }

.CallToAction-partner {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

@media only screen and (min-width: 560px) {
  .CallToAction-button {
    width: 320px; }

  .CallToAction-headline {
    margin-bottom: 16px; }

  .CallToAction-content p {
    margin-bottom: 12px; } }
@media only screen and (min-width: 1024px) {
  .CallToAction-headline {
    margin-bottom: 24px; } }
.PartnerLogo {
  max-width: 88px;
  max-height: 41px; }

.RelatedVertical {
  padding-top: 30px;
  padding-bottom: 10px; }

.RelatedVertical-title {
  margin-bottom: 20px; }

.RelatedVertical-verticalLogo {
  margin-bottom: 20px; }

.RelatedVertical-card {
  margin-bottom: 10px; }

.RelatedVertical-cardImageWrap {
  margin-bottom: 0; }

@media only screen and (min-width: 560px) {
  .RelatedVertical-card {
    margin-bottom: 20px; } }
@media only screen and (min-width: 760px) {
  .RelatedVertical-card {
    margin-bottom: 30px; } }
.RelatedHorizontal {
  padding-bottom: 10px;
  padding-top: 30px; }

.RelatedHorizontal-header {
  margin-bottom: 20px; }

.RelatedHorizontal-verticalLogo {
  margin-bottom: 45px;
  display: inline-block; }

.RelatedHorizontal-partnerBar {
  padding-left: 20px; }

.RelatedHorizontal-card {
  margin-bottom: 10px; }

.RelatedHorizontal-cardImageWrap {
  margin-bottom: 0; }

.RelatedHorizontal-layer1 {
  z-index: 2; }

.RelatedHorizontal-layer2 {
  z-index: 1; }

.RelatedHorizontal-cardLogo {
  width: 70px; }

@media only screen and (min-width: 560px) {
  .RelatedHorizontal-cardLogo {
    width: 100px; } }
@media only screen and (min-width: 560px) {
  .RelatedHorizontal-card {
    margin-bottom: 20px; } }
@media only screen and (min-width: 760px) {
  .RelatedHorizontal-card {
    margin-bottom: 30px; }

  .RelatedHorizontal-cardLogo {
    width: 70px; } }
.LogoVerticalSquare--future {
  background-image: url("../../../img/logos-vertical-square/future_logo.png");
  background-image: none, url("../../../img/logos-vertical-square/future_logo.svg");
  background-repeat: no-repeat;
  background-size: 100%; }

.LogoVerticalSquare--earth {
  background-image: url("../../../img/logos-vertical-square/earth_logo.png");
  background-image: none, url("../../../img/logos-vertical-square/earth_logo.svg");
  background-repeat: no-repeat;
  background-size: 100%; }

.LogoVerticalSquare--culture {
  background-image: url("../../../img/logos-vertical-square/culture_logo.png");
  background-image: none, url("../../../img/logos-vertical-square/culture_logo.svg");
  background-repeat: no-repeat;
  background-size: 100%; }

.LogoVerticalSquare--capital {
  background-image: url("../../../img/logos-vertical-square/capital_logo.png");
  background-image: none, url("../../../img/logos-vertical-square/capital_logo.svg");
  background-repeat: no-repeat;
  background-size: 100%; }

.LogoVerticalSquare--travel {
  background-image: url("../../../img/logos-vertical-square/travel_logo.png");
  background-image: none, url("../../../img/logos-vertical-square/travel_logo.svg");
  background-repeat: no-repeat;
  background-size: 100%; }

.LogoVerticalSquare--autos {
  background-image: url("../../../img/logos-vertical-square/autos_logo.png");
  background-image: none, url("../../../img/logos-vertical-square/autos_logo.svg");
  background-repeat: no-repeat;
  background-size: 100%; }

.LogoVerticalSquare--sport {
  background-image: url("../../../img/logos-vertical-square/sport_logo.png");
  background-image: none, url("../../../img/logos-vertical-square/sport_logo.svg");
  background-repeat: no-repeat;
  background-size: 100%; }

.RelatedSeries {
  padding-bottom: 10px;
  padding-top: 30px; }

.RelatedSeries-header {
  display: table;
  margin-bottom: 5px;
  width: 100%; }

.RelatedSeries-category {
  display: table-footer-group; }

.RelatedSeries-partnerBar {
  display: table-header-group; }

.RelatedSeries-partnerBar .PartnerBar-logo {
  margin-left: 10px; }

.RelatedSeries-partnerBar .PartnerBar {
  margin-bottom: 10px; }

.RelatedSeries-categoryMeta {
  margin-bottom: 5px;
  margin-top: 10px; }

.RelatedSeries-title {
  margin-bottom: 5px; }

.RelatedSeries-intro {
  margin-bottom: 10px; }

.RelatedSeries-card {
  margin-bottom: 10px; }

.RelatedSeries-cardImageWrap {
  margin-left: 0;
  margin-right: 0; }

@media only screen and (min-width: 560px) {
  .RelatedSeries-card {
    margin-bottom: 20px; } }
@media only screen and (min-width: 760px) {
  .RelatedSeries-card {
    margin-bottom: 30px; }

  .RelatedSeries-header {
    margin-bottom: 5px; }

  .RelatedSeries-category {
    display: table-cell;
    vertical-align: middle; }

  .RelatedSeries-partnerBar {
    display: table-cell;
    vertical-align: middle;
    width: auto; }

  .RelatedSeries-intro {
    margin-bottom: 20px; }

  .RelatedSeries-categoryMeta {
    margin-bottom: 0; }

  .RelatedSeries-categoryTitle {
    margin-bottom: 0; } }
.IconSocial {
  display: inline-block;
  background-repeat: no-repeat;
  width: 32px;
  height: 24px;
  background: url("../../../img/share/v2/social_sprite.png");
  background: none, url("../../../img/share/v2/social_sprite.svg");
  background-size: 149px 24px;
  -webkit-transform: scale(1.3);
      -ms-transform: scale(1.3);
          transform: scale(1.3); }

.IconSocial--facebook {
  background-position: 0 0;
  width: 31px; }

.IconSocial--twitter {
  background-position: -32px 0;
  width: 23px; }

.IconSocial--googleplus {
  background-position: -243px 0;
  width: 32px; }

.IconSocial--linkedin {
  background-position: -62px 0px;
  width: 25px; }

.IconSocial--pintrest {
  background-position: -281px 0;
  width: 17px; }

.Share {
  margin-bottom: 30px; }
  .Share .Share-title,
  .Share .Share-ruleStylish,
  .Share .Share-rule {
    display: none; }

.Share-list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: 0 auto;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.Share-item {
  margin-left: 0;
  text-align: center;
  vertical-align: top;
  width: 25%; }

@media only screen and (min-width: 560px) {
  .Share-list {
    width: 70%; } }
.ContentPromo {
  margin-bottom: 30px;
  padding-top: 30px; }

.ContentPromo-cardList {
  display: -ms-grid;
  display: grid;
  grid-gap: 16px; }

.ContentPromo-twoColumn {
  -ms-grid-columns: (1fr)[2];
      grid-template-columns: repeat(2, 1fr); }

.ContentPromo-threeColumn {
  -ms-grid-columns: (1fr)[3];
      grid-template-columns: repeat(3, 1fr); }

.ContentPromo-cardSubHeading {
  color: #7F7F7F;
  margin-bottom: 5px;
  text-transform: uppercase;
  font-size: 15px;
  letter-spacing: 1.7px;
  line-height: 22px; }

@media (max-width: 760px) {
  .ContentPromo-cardList {
    -ms-grid-columns: (1fr)[1];
        grid-template-columns: repeat(1, 1fr);
    grid-auto-rows: minmax(380px, auto); } }
.ContentPromo-intro {
  padding: 0 16px; }

.ContentPromo-intro {
  margin-bottom: 10px; }

.ContentPromo-introTitle {
  margin-bottom: 10px; }

.ContentPromo-card {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%; }

.ContentPromo-cardLink {
  background-color: #000;
  color: #fff;
  text-transform: uppercase;
  padding: 10px;
  margin: 10px 16px;
  border-radius: 25px;
  text-align: center;
  font-size: 14px;
  font-weight: bold;
  letter-spacing: 1px; }

.ContentPromo-flexContainer {
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  padding-bottom: 1rem; }

.ContentPromo-textContainer {
  padding: 0 16px; }

.ContentPromo .ContentPromo-cardImageWrap {
  margin-bottom: 15px;
  padding-right: 0; }

.ContentPromo-cardTitle {
  margin-bottom: 5px; }

.ContentPromo-line {
  width: 50%;
  height: 1px;
  margin: 2rem 0;
  background-color: #7F7F7F; }

.ContentPromo-introRule {
  margin-bottom: 25px; }

@media only screen and (min-width: 560px) {
  .ContentPromo-introTitle {
    margin-bottom: 0; }

  .ContentPromo-introContent {
    margin-bottom: 15px; }

  .ContentPromo .ContentPromo-cardImageWrap {
    margin-bottom: 15px; }

  .ContentPromo-cardTitle {
    margin-bottom: 10px; } }
@media only screen and (min-width: 760px) {
  .ContentPromo-cardSubHeading {
    font-size: 16px;
    font-size: 1.6rem;
    letter-spacing: 2.5px;
    line-height: 24px; }

  .ContentPromo-cardTitle {
    margin-bottom: 5px; }

  .ContentPromo-cardIntro {
    float: none;
    width: auto; }

  .ContentPromo .ContentPromo-cardImageWrap {
    float: none;
    padding-right: 0;
    width: auto; }

  .ContentPromo-cardLink {
    margin: 10px 16px;
    width: 240px; }

  .ContentPromo-line {
    width: 180px; } }
/* https://github.com/kenwheeler/slick/ */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -khtml-user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  display: block;
  overflow: hidden;
  margin: 0;
  padding: 0;
  z-index: 0; }

.slick-list:focus {
  outline: none; }

.slick-list.dragging {
  cursor: pointer;
  cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  top: 0;
  left: 0;
  display: block; }

.slick-track:before,
.slick-track:after {
  display: table;
  content: ''; }

.slick-track:after {
  clear: both; }

.slick-loading .slick-track {
  visibility: hidden; }

.slick-slide {
  display: none;
  float: left;
  height: 100%;
  min-height: 1px; }

[dir='rtl'] .slick-slide {
  float: right; }

.slick-slide img {
  display: block; }

.slick-slide.slick-loading img {
  display: none; }

.slick-slide.dragging img {
  pointer-events: none; }

.slick-initialized .slick-slide {
  display: block; }

.slick-loading .slick-slide {
  visibility: hidden; }

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent; }

.fullWidthGalleryTitle {
  font-family: "freight", Georgia, "Times New Roman", serif;
  font-size: 40px;
  font-weight: bold;
  color: #000000;
  line-height: 44px; }

.fullWidthGalleryDescription {
  font-family: "lato", Helvetica, Arial, sans-serif;
  padding-top: 0.5rem;
  padding-bottom: 1.5rem;
  font-size: 19px;
  color: #000000;
  line-height: 32px; }

.Slider {
  margin-bottom: 30px;
  margin-top: 30px; }

.Slider-wrapper {
  max-width: 1080px;
  margin-left: -16px;
  margin-right: -16px; }

.Slider-inner {
  position: relative; }

.Slider-itemImage {
  height: auto; }

.Slider-item .BodyText-caption {
  background-color: #1a1a1a;
  bottom: 0;
  margin: 0;
  padding: 6px 8px;
  position: absolute;
  width: 100%; }

.Slider-item .BodyText-captionBody p {
  color: #fff;
  font-size: 13px;
  font-size: 1.3rem;
  line-height: 1.7; }

/* Slider arrows */
.Slider-prev,
.Slider-next {
  position: absolute;
  top: 50%;
  display: inline-block;
  width: 40px;
  height: 60px;
  margin-top: -30px;
  z-index: 1;
  border: 0 none;
  padding: 0;
  background: transparent;
  cursor: pointer;
  outline: none; }

.Slider-prev {
  left: 10px; }

.Slider-next {
  right: 10px; }

.Slider-prev-inner,
.Slider-next-inner {
  display: inline-block;
  background-repeat: no-repeat;
  width: 20px;
  height: 40px;
  background: url("../../../img/slider/carousel_arrow_sprite_mobile.png");
  background: none, url("../../../img/slider/carousel_arrow_sprite_mobile.svg");
  text-indent: -9999px;
  direction: ltr;
  cursor: pointer;
  background-position: 0 40px; }

.Slider-next-inner {
  background-position: 40px 0; }

/* Slider-progress */
.Slider-progress {
  position: absolute;
  left: 15px;
  top: 15px; }

.Slider-progress--current {
  border-right: 1px solid;
  padding: 5px 15px 5px 0; }

.Slider-progress--total {
  padding: 10px 10px 10px 15px; }

@media only screen and (min-width: 560px) {
  .Slider-wrapper {
    margin-left: -48px;
    margin-right: -48px; }

  .Slider-item .BodyText-caption {
    padding: 12px 16px; }

  .Slider-item .BodyText-captionBody p {
    font-size: 16px;
    font-size: 1.6rem;
    line-height: 1.37; } }
@media only screen and (min-width: 760px) {
  /* Slider arrows */
  .Slider-item .BodyText-captionBody p {
    max-width: none; }

  .Slider-prev {
    left: 10px; }

  .Slider-next {
    right: 10px; }

  .Slider-prev,
  .Slider-next {
    margin-top: -40px;
    width: 50px;
    height: 80px; }

  .Slider-prev-inner,
  .Slider-next-inner {
    width: 30px;
    height: 80px;
    background: url("../../../img/slider/carousel_arrow_sprite.png");
    background: none, url("../../../img/slider/carousel_arrow_sprite.svg");
    background-position: 80px 0; }

  .Slider-next-inner {
    background-position: -10px 80px; }

  .Slider-progress {
    position: absolute;
    top: 30px;
    left: 16px; }

  .Slider-progress--current {
    border-right: 1px solid;
    padding: 10px 20px 10px 0; }

  .Slider-progress--total {
    padding-left: 20px; } }
@media only screen and (min-width: 1024px) {
  .Slider-wrapper {
    margin-left: auto;
    margin-right: auto; } }
.NavBar {
  display: inline-block;
  z-index: 1; }

.NavBar-list {
  max-height: 60px;
  overflow: hidden; }
  .no-js .NavBar-list {
    max-height: none; }

.ie9 {
  display: inline-block; }

.NavBar-link {
  display: block;
  padding: 12px;
  white-space: nowrap; }

.NavBar-link--toggle {
  border: solid transparent;
  border-width: 4px 7px;
  margin: 0;
  padding: 0; }

.NavBar-toggle {
  display: inline-block; }

.NavBar-toggle-button {
  display: none;
  margin-left: 8px; }
  @media (max-width: 400px) {
    .NavBar-toggle-button {
      margin-left: 4px; } }
  .NavBar-toggle-button--is-active {
    display: inline-block; }

.NavBar--overflow {
  background: black;
  position: absolute;
  right: 0;
  top: 100%;
  width: 100%; }
  .NavBar--overflow .NavBar-nav {
    min-width: 200px; }
  .NavBar--overflow .NavBar-item {
    display: block;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
  .NavBar--overflow .NavBar-list {
    max-height: none; }

@media only screen and (min-width: 560px) {
  .NavBar-link {
    padding: 16px; }

  .NavBar-link--toggle {
    padding: 0; }

  .NavBar-toggle-button {
    margin-left: 10px; }

  .NavBar-item {
    float: left;
    width: 50%; } }
@media only screen and (min-width: 760px) {
  .ie9 .NavBarContainer-main,
  .ie9 .NavBarContainer-overflow {
    display: inline-block; }

  .NavBar--overflow {
    right: auto;
    width: auto; }

  .NavBar-link {
    max-width: 260px;
    padding-bottom: 22px;
    padding-top: 22px; }

  .NavBar-link--toggle {
    border: none;
    margin: 0;
    padding-left: 16px;
    padding-right: 16px; }
    .NavBar-link--toggle:before {
      display: none; }

  .NavBar--overflow .NavBar-link {
    padding: 16px 0; }

  .NavBar-toggle-button {
    margin-left: 0; }

  .NavBar-item {
    float: none;
    width: auto; } }
.Nav {
  position: relative; }
  .js .Nav {
    left: 0;
    position: absolute;
    top: 100%;
    width: 100%; }

.Nav-list {
  padding-bottom: 5px; }

.Nav-item {
  border-bottom: 1px solid;
  padding: 5px 0; }
  .Nav-item:last-child {
    border-bottom: 0 none; }

@media only screen and (min-width: 760px) {
  .Nav {
    display: none; } }
.IconBurger {
  width: 20px;
  height: 20px;
  background-image: url("../../../img/burger/nav_burger.png");
  background-image: none, url("../../../img/burger/nav_burger.svg");
  transition: opacity 0.4s ease-in-out; }

.IconBurger.is-expanded {
  background-image: url("../../../img/burger/nav_burger_close.png");
  background-image: none, url("../../../img/burger/nav_burger_close.svg");
  opacity: 1; }

.IconBurger.is-collapsed {
  background-image: url("../../../img/burger/nav_burger.png");
  background-image: none, url("../../../img/burger/nav_burger.svg");
  opacity: 1; }

.AdSlot {
  display: none; }

.bbccom_leaderboard .AdSlot--leaderboard {
  display: block; }
  .bbccom_leaderboard .AdSlot--leaderboard .AdSlot-wrapper {
    background: #333;
    padding: 10px 0 0; }

.bbccom_mpu .AdSlot--mpu {
  display: block;
  margin-top: 30px;
  margin-bottom: 30px;
  margin-left: -16px;
  margin-right: -16px; }
  .bbccom_mpu .AdSlot--mpu .AdSlot-wrapper {
    background: #eee;
    padding: 10px 0; }

@media only screen and (min-width: 360px) {
  .bbccom_mpu .AdSlot--mpu-bodyTextSide,
  .bbccom_mpu .AdSlot--mpu-hero {
    margin-left: -16px;
    margin-right: -16px; } }
@media only screen and (min-width: 560px) {
  .bbccom_mpu .AdSlot--mpu-bodyTextSide,
  .bbccom_mpu .AdSlot--mpu-hero {
    margin-left: -48px;
    margin-right: -48px; } }
@media only screen and (min-width: 760px) {
  .bbccom_mpu .AdSlot--mpu-bodyTextSide,
  .bbccom_mpu .AdSlot--mpu-hero {
    margin-top: 0; } }
@media only screen and (min-width: 1024px) {
  .bbccom_mpu .AdSlot--mpu-bodyTextSide,
  .bbccom_mpu .AdSlot--mpu-hero {
    float: right;
    margin-left: 16px;
    margin-right: 0;
    margin-top: 0; }
    .bbccom_mpu .AdSlot--mpu-bodyTextSide .AdSlot-wrapper,
    .bbccom_mpu .AdSlot--mpu-hero .AdSlot-wrapper {
      background: transparent;
      margin-left: 0;
      margin-right: 0; } }
.VideoControls {
  cursor: default;
  overflow: auto;
  position: relative;
  z-index: 1000; }

.VideoControls-button {
  font-family: "open_sans", Helvetica, Arial, sans-serif;
  font-weight: bold;
  float: right;
  opacity: 0;
  -webkit-transform: translateY(-100px);
      -ms-transform: translateY(-100px);
          transform: translateY(-100px);
  transition: opacity 0.2s; }
  .VideoControls-button.is-active {
    opacity: 1;
    -webkit-transform: translateY(0);
        -ms-transform: translateY(0);
            transform: translateY(0); }

@media only screen and (min-width: 1024px) {
  .VideoControls {
    margin: 8px 0; } }
.IconInfo {
  width: 10px;
  height: 10px;
  background-image: url("../../../img/question_mark.png");
  background-image: none, url("../../../img/question_mark.svg");
  transition: opacity 0.4s ease-in-out;
  background-size: cover; }

.AboutLink {
  background: rgba(0, 0, 0, 0.3);
  cursor: pointer;
  display: block;
  padding: 3px 12px 7px;
  transition: -webkit-transform .2s;
  transition: transform .2s;
  transition: transform .2s, -webkit-transform .2s;
  white-space: nowrap; }
  .bbccom_leaderboard .AboutLink, .bbccom_mpu .AboutLink, .js-is-sticky .AboutLink, .js-is-stuck .AboutLink {
    -webkit-transform: translate(71%);
        -ms-transform: translate(71%);
            transform: translate(71%); }
  .AboutLink, .AboutLink:hover, .AboutLink:focus {
    -webkit-transform: translate(0);
        -ms-transform: translate(0);
            transform: translate(0); }

.AboutLink-Text {
  color: #fff;
  font-family: "helvetica_neue", Helvetica, Arial, sans-serif;
  font-size: 12px;
  font-size: 1.2rem;
  font-weight: bold;
  text-decoration: underline;
  line-height: 1; }

.AboutLink-Icon {
  margin-right: 6px;
  vertical-align: middle; }

@media only screen and (min-width: 760px) {
  .js-is-sticky .AboutLink, .js-is-stuck .AboutLink, .AboutLink, .AboutLink:hover, .AboutLink:focus {
    -webkit-transform: translate(0);
        -ms-transform: translate(0);
            transform: translate(0); }
  .bbccom_leaderboard .AboutLink, .bbccom_mpu .AboutLink {
    -webkit-transform: translate(71%);
        -ms-transform: translate(71%);
            transform: translate(71%); } }
@media only screen and (min-width: 1024px) {
  .AboutLink {
    background: transparent;
    padding-right: 0; }
    .bbccom_leaderboard .AboutLink, .bbccom_mpu .AboutLink {
      -webkit-transform: translate(0);
          -ms-transform: translate(0);
              transform: translate(0); }

  .AboutLink-Icon {
    margin-right: 0; }

  .AboutLink-Text {
    text-decoration: none; } }
.NavBarContainer {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin: -12px 0;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%; }

.NavBarContainer-main {
  -webkit-flex: 0 0 auto;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto; }

/* 
    Generates utils prefixed with $util-align-breakpoints:

    .u-alignTop
    .largePlus-u-alignTop
    .hugePlus-u-alignTop

    etc.
*/
/* Regular, non-responsive classes */
/**
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */
.u-alignBaseline {
  vertical-align: baseline; }

.u-alignBottom {
  vertical-align: bottom; }

.u-alignMiddle {
  vertical-align: middle; }

.u-alignTop {
  vertical-align: top; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  /**
   * Vertical alignment utilities
   * Depends on an appropriate `display` value.
   */
  .tinyPlus-u-alignBaseline {
    vertical-align: baseline; }

  .tinyPlus-u-alignBottom {
    vertical-align: bottom; }

  .tinyPlus-u-alignMiddle {
    vertical-align: middle; }

  .tinyPlus-u-alignTop {
    vertical-align: top; } }
@media only screen and (min-width: 360px) {
  /**
   * Vertical alignment utilities
   * Depends on an appropriate `display` value.
   */
  .smallPlus-u-alignBaseline {
    vertical-align: baseline; }

  .smallPlus-u-alignBottom {
    vertical-align: bottom; }

  .smallPlus-u-alignMiddle {
    vertical-align: middle; }

  .smallPlus-u-alignTop {
    vertical-align: top; } }
@media only screen and (min-width: 560px) {
  /**
   * Vertical alignment utilities
   * Depends on an appropriate `display` value.
   */
  .mediumPlus-u-alignBaseline {
    vertical-align: baseline; }

  .mediumPlus-u-alignBottom {
    vertical-align: bottom; }

  .mediumPlus-u-alignMiddle {
    vertical-align: middle; }

  .mediumPlus-u-alignTop {
    vertical-align: top; } }
@media only screen and (min-width: 760px) {
  /**
   * Vertical alignment utilities
   * Depends on an appropriate `display` value.
   */
  .largePlus-u-alignBaseline {
    vertical-align: baseline; }

  .largePlus-u-alignBottom {
    vertical-align: bottom; }

  .largePlus-u-alignMiddle {
    vertical-align: middle; }

  .largePlus-u-alignTop {
    vertical-align: top; } }
@media only screen and (min-width: 1024px) {
  /**
   * Vertical alignment utilities
   * Depends on an appropriate `display` value.
   */
  .hugePlus-u-alignBaseline {
    vertical-align: baseline; }

  .hugePlus-u-alignBottom {
    vertical-align: bottom; }

  .hugePlus-u-alignMiddle {
    vertical-align: middle; }

  .hugePlus-u-alignTop {
    vertical-align: top; } }
@media only screen and (min-width: 1280px) {
  /**
   * Vertical alignment utilities
   * Depends on an appropriate `display` value.
   */
  .superHugePlus-u-alignBaseline {
    vertical-align: baseline; }

  .superHugePlus-u-alignBottom {
    vertical-align: bottom; }

  .superHugePlus-u-alignMiddle {
    vertical-align: middle; }

  .superHugePlus-u-alignTop {
    vertical-align: top; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  /**
   * Vertical alignment utilities
   * Depends on an appropriate `display` value.
   */
  .aspectRatio15x9to16x9Landscape-u-alignBaseline {
    vertical-align: baseline; }

  .aspectRatio15x9to16x9Landscape-u-alignBottom {
    vertical-align: bottom; }

  .aspectRatio15x9to16x9Landscape-u-alignMiddle {
    vertical-align: middle; }

  .aspectRatio15x9to16x9Landscape-u-alignTop {
    vertical-align: top; } }
/*
    Generates utils prefixed with $util-before-breakpoints:

    .u-before1of12
    .largePlus-u-before1of12
    .hugePlus-u-before1of12

    etc.
*/
/* Regular, non-responsive classes */
/*
    Specify the proportional offset before an object.
    Intentional redundancy build into each set of unit classes.
    Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
*/
.u-before1of12 {
  margin-left: 8.3333333333%; }

.u-before1of10 {
  margin-left: 10%; }

.u-before1of8 {
  margin-left: 12.5%; }

.u-before1of6,
.u-before2of12 {
  margin-left: 16.6666666667%; }

.u-before1of5,
.u-before2of10 {
  margin-left: 20%; }

.u-before1of4,
.u-before2of8,
.u-before3of12 {
  margin-left: 25%; }

.u-before3of10 {
  margin-left: 30%; }

.u-before1of3,
.u-before2of6,
.u-before4of12 {
  margin-left: 33.3333333333%; }

.u-before3of8 {
  margin-left: 37.5%; }

.u-before2of5,
.u-before4of10 {
  margin-left: 40%; }

.u-before5of12 {
  margin-left: 41.6666666667%; }

.u-before1of2,
.u-before2of4,
.u-before3of6,
.u-before4of8,
.u-before5of10,
.u-before6of12 {
  margin-left: 50%; }

.u-before7of12 {
  margin-left: 58.3333333333%; }

.u-before3of5,
.u-before6of10 {
  margin-left: 60%; }

.u-before5of8 {
  margin-left: 62.5%; }

.u-before2of3,
.u-before4of6,
.u-before8of12 {
  margin-left: 66.6666666667%; }

.u-before7of10 {
  margin-left: 70%; }

.u-before3of4,
.u-before6of8,
.u-before9of12 {
  margin-left: 75%; }

.u-before4of5,
.u-before8of10 {
  margin-left: 80%; }

.u-before5of6,
.u-before10of12 {
  margin-left: 83.3333333333%; }

.u-before7of8 {
  margin-left: 87.5%; }

.u-before9of10 {
  margin-left: 90%; }

.u-before11of12 {
  margin-left: 91.6666666667%; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  /*
      Specify the proportional offset before an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
  */
  .tinyPlus-u-before1of12 {
    margin-left: 8.3333333333%; }

  .tinyPlus-u-before1of10 {
    margin-left: 10%; }

  .tinyPlus-u-before1of8 {
    margin-left: 12.5%; }

  .tinyPlus-u-before1of6,
  .tinyPlus-u-before2of12 {
    margin-left: 16.6666666667%; }

  .tinyPlus-u-before1of5,
  .tinyPlus-u-before2of10 {
    margin-left: 20%; }

  .tinyPlus-u-before1of4,
  .tinyPlus-u-before2of8,
  .tinyPlus-u-before3of12 {
    margin-left: 25%; }

  .tinyPlus-u-before3of10 {
    margin-left: 30%; }

  .tinyPlus-u-before1of3,
  .tinyPlus-u-before2of6,
  .tinyPlus-u-before4of12 {
    margin-left: 33.3333333333%; }

  .tinyPlus-u-before3of8 {
    margin-left: 37.5%; }

  .tinyPlus-u-before2of5,
  .tinyPlus-u-before4of10 {
    margin-left: 40%; }

  .tinyPlus-u-before5of12 {
    margin-left: 41.6666666667%; }

  .tinyPlus-u-before1of2,
  .tinyPlus-u-before2of4,
  .tinyPlus-u-before3of6,
  .tinyPlus-u-before4of8,
  .tinyPlus-u-before5of10,
  .tinyPlus-u-before6of12 {
    margin-left: 50%; }

  .tinyPlus-u-before7of12 {
    margin-left: 58.3333333333%; }

  .tinyPlus-u-before3of5,
  .tinyPlus-u-before6of10 {
    margin-left: 60%; }

  .tinyPlus-u-before5of8 {
    margin-left: 62.5%; }

  .tinyPlus-u-before2of3,
  .tinyPlus-u-before4of6,
  .tinyPlus-u-before8of12 {
    margin-left: 66.6666666667%; }

  .tinyPlus-u-before7of10 {
    margin-left: 70%; }

  .tinyPlus-u-before3of4,
  .tinyPlus-u-before6of8,
  .tinyPlus-u-before9of12 {
    margin-left: 75%; }

  .tinyPlus-u-before4of5,
  .tinyPlus-u-before8of10 {
    margin-left: 80%; }

  .tinyPlus-u-before5of6,
  .tinyPlus-u-before10of12 {
    margin-left: 83.3333333333%; }

  .tinyPlus-u-before7of8 {
    margin-left: 87.5%; }

  .tinyPlus-u-before9of10 {
    margin-left: 90%; }

  .tinyPlus-u-before11of12 {
    margin-left: 91.6666666667%; } }
@media only screen and (min-width: 360px) {
  /*
      Specify the proportional offset before an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
  */
  .smallPlus-u-before1of12 {
    margin-left: 8.3333333333%; }

  .smallPlus-u-before1of10 {
    margin-left: 10%; }

  .smallPlus-u-before1of8 {
    margin-left: 12.5%; }

  .smallPlus-u-before1of6,
  .smallPlus-u-before2of12 {
    margin-left: 16.6666666667%; }

  .smallPlus-u-before1of5,
  .smallPlus-u-before2of10 {
    margin-left: 20%; }

  .smallPlus-u-before1of4,
  .smallPlus-u-before2of8,
  .smallPlus-u-before3of12 {
    margin-left: 25%; }

  .smallPlus-u-before3of10 {
    margin-left: 30%; }

  .smallPlus-u-before1of3,
  .smallPlus-u-before2of6,
  .smallPlus-u-before4of12 {
    margin-left: 33.3333333333%; }

  .smallPlus-u-before3of8 {
    margin-left: 37.5%; }

  .smallPlus-u-before2of5,
  .smallPlus-u-before4of10 {
    margin-left: 40%; }

  .smallPlus-u-before5of12 {
    margin-left: 41.6666666667%; }

  .smallPlus-u-before1of2,
  .smallPlus-u-before2of4,
  .smallPlus-u-before3of6,
  .smallPlus-u-before4of8,
  .smallPlus-u-before5of10,
  .smallPlus-u-before6of12 {
    margin-left: 50%; }

  .smallPlus-u-before7of12 {
    margin-left: 58.3333333333%; }

  .smallPlus-u-before3of5,
  .smallPlus-u-before6of10 {
    margin-left: 60%; }

  .smallPlus-u-before5of8 {
    margin-left: 62.5%; }

  .smallPlus-u-before2of3,
  .smallPlus-u-before4of6,
  .smallPlus-u-before8of12 {
    margin-left: 66.6666666667%; }

  .smallPlus-u-before7of10 {
    margin-left: 70%; }

  .smallPlus-u-before3of4,
  .smallPlus-u-before6of8,
  .smallPlus-u-before9of12 {
    margin-left: 75%; }

  .smallPlus-u-before4of5,
  .smallPlus-u-before8of10 {
    margin-left: 80%; }

  .smallPlus-u-before5of6,
  .smallPlus-u-before10of12 {
    margin-left: 83.3333333333%; }

  .smallPlus-u-before7of8 {
    margin-left: 87.5%; }

  .smallPlus-u-before9of10 {
    margin-left: 90%; }

  .smallPlus-u-before11of12 {
    margin-left: 91.6666666667%; } }
@media only screen and (min-width: 560px) {
  /*
      Specify the proportional offset before an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
  */
  .mediumPlus-u-before1of12 {
    margin-left: 8.3333333333%; }

  .mediumPlus-u-before1of10 {
    margin-left: 10%; }

  .mediumPlus-u-before1of8 {
    margin-left: 12.5%; }

  .mediumPlus-u-before1of6,
  .mediumPlus-u-before2of12 {
    margin-left: 16.6666666667%; }

  .mediumPlus-u-before1of5,
  .mediumPlus-u-before2of10 {
    margin-left: 20%; }

  .mediumPlus-u-before1of4,
  .mediumPlus-u-before2of8,
  .mediumPlus-u-before3of12 {
    margin-left: 25%; }

  .mediumPlus-u-before3of10 {
    margin-left: 30%; }

  .mediumPlus-u-before1of3,
  .mediumPlus-u-before2of6,
  .mediumPlus-u-before4of12 {
    margin-left: 33.3333333333%; }

  .mediumPlus-u-before3of8 {
    margin-left: 37.5%; }

  .mediumPlus-u-before2of5,
  .mediumPlus-u-before4of10 {
    margin-left: 40%; }

  .mediumPlus-u-before5of12 {
    margin-left: 41.6666666667%; }

  .mediumPlus-u-before1of2,
  .mediumPlus-u-before2of4,
  .mediumPlus-u-before3of6,
  .mediumPlus-u-before4of8,
  .mediumPlus-u-before5of10,
  .mediumPlus-u-before6of12 {
    margin-left: 50%; }

  .mediumPlus-u-before7of12 {
    margin-left: 58.3333333333%; }

  .mediumPlus-u-before3of5,
  .mediumPlus-u-before6of10 {
    margin-left: 60%; }

  .mediumPlus-u-before5of8 {
    margin-left: 62.5%; }

  .mediumPlus-u-before2of3,
  .mediumPlus-u-before4of6,
  .mediumPlus-u-before8of12 {
    margin-left: 66.6666666667%; }

  .mediumPlus-u-before7of10 {
    margin-left: 70%; }

  .mediumPlus-u-before3of4,
  .mediumPlus-u-before6of8,
  .mediumPlus-u-before9of12 {
    margin-left: 75%; }

  .mediumPlus-u-before4of5,
  .mediumPlus-u-before8of10 {
    margin-left: 80%; }

  .mediumPlus-u-before5of6,
  .mediumPlus-u-before10of12 {
    margin-left: 83.3333333333%; }

  .mediumPlus-u-before7of8 {
    margin-left: 87.5%; }

  .mediumPlus-u-before9of10 {
    margin-left: 90%; }

  .mediumPlus-u-before11of12 {
    margin-left: 91.6666666667%; } }
@media only screen and (min-width: 760px) {
  /*
      Specify the proportional offset before an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
  */
  .largePlus-u-before1of12 {
    margin-left: 8.3333333333%; }

  .largePlus-u-before1of10 {
    margin-left: 10%; }

  .largePlus-u-before1of8 {
    margin-left: 12.5%; }

  .largePlus-u-before1of6,
  .largePlus-u-before2of12 {
    margin-left: 16.6666666667%; }

  .largePlus-u-before1of5,
  .largePlus-u-before2of10 {
    margin-left: 20%; }

  .largePlus-u-before1of4,
  .largePlus-u-before2of8,
  .largePlus-u-before3of12 {
    margin-left: 25%; }

  .largePlus-u-before3of10 {
    margin-left: 30%; }

  .largePlus-u-before1of3,
  .largePlus-u-before2of6,
  .largePlus-u-before4of12 {
    margin-left: 33.3333333333%; }

  .largePlus-u-before3of8 {
    margin-left: 37.5%; }

  .largePlus-u-before2of5,
  .largePlus-u-before4of10 {
    margin-left: 40%; }

  .largePlus-u-before5of12 {
    margin-left: 41.6666666667%; }

  .largePlus-u-before1of2,
  .largePlus-u-before2of4,
  .largePlus-u-before3of6,
  .largePlus-u-before4of8,
  .largePlus-u-before5of10,
  .largePlus-u-before6of12 {
    margin-left: 50%; }

  .largePlus-u-before7of12 {
    margin-left: 58.3333333333%; }

  .largePlus-u-before3of5,
  .largePlus-u-before6of10 {
    margin-left: 60%; }

  .largePlus-u-before5of8 {
    margin-left: 62.5%; }

  .largePlus-u-before2of3,
  .largePlus-u-before4of6,
  .largePlus-u-before8of12 {
    margin-left: 66.6666666667%; }

  .largePlus-u-before7of10 {
    margin-left: 70%; }

  .largePlus-u-before3of4,
  .largePlus-u-before6of8,
  .largePlus-u-before9of12 {
    margin-left: 75%; }

  .largePlus-u-before4of5,
  .largePlus-u-before8of10 {
    margin-left: 80%; }

  .largePlus-u-before5of6,
  .largePlus-u-before10of12 {
    margin-left: 83.3333333333%; }

  .largePlus-u-before7of8 {
    margin-left: 87.5%; }

  .largePlus-u-before9of10 {
    margin-left: 90%; }

  .largePlus-u-before11of12 {
    margin-left: 91.6666666667%; } }
@media only screen and (min-width: 1024px) {
  /*
      Specify the proportional offset before an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
  */
  .hugePlus-u-before1of12 {
    margin-left: 8.3333333333%; }

  .hugePlus-u-before1of10 {
    margin-left: 10%; }

  .hugePlus-u-before1of8 {
    margin-left: 12.5%; }

  .hugePlus-u-before1of6,
  .hugePlus-u-before2of12 {
    margin-left: 16.6666666667%; }

  .hugePlus-u-before1of5,
  .hugePlus-u-before2of10 {
    margin-left: 20%; }

  .hugePlus-u-before1of4,
  .hugePlus-u-before2of8,
  .hugePlus-u-before3of12 {
    margin-left: 25%; }

  .hugePlus-u-before3of10 {
    margin-left: 30%; }

  .hugePlus-u-before1of3,
  .hugePlus-u-before2of6,
  .hugePlus-u-before4of12 {
    margin-left: 33.3333333333%; }

  .hugePlus-u-before3of8 {
    margin-left: 37.5%; }

  .hugePlus-u-before2of5,
  .hugePlus-u-before4of10 {
    margin-left: 40%; }

  .hugePlus-u-before5of12 {
    margin-left: 41.6666666667%; }

  .hugePlus-u-before1of2,
  .hugePlus-u-before2of4,
  .hugePlus-u-before3of6,
  .hugePlus-u-before4of8,
  .hugePlus-u-before5of10,
  .hugePlus-u-before6of12 {
    margin-left: 50%; }

  .hugePlus-u-before7of12 {
    margin-left: 58.3333333333%; }

  .hugePlus-u-before3of5,
  .hugePlus-u-before6of10 {
    margin-left: 60%; }

  .hugePlus-u-before5of8 {
    margin-left: 62.5%; }

  .hugePlus-u-before2of3,
  .hugePlus-u-before4of6,
  .hugePlus-u-before8of12 {
    margin-left: 66.6666666667%; }

  .hugePlus-u-before7of10 {
    margin-left: 70%; }

  .hugePlus-u-before3of4,
  .hugePlus-u-before6of8,
  .hugePlus-u-before9of12 {
    margin-left: 75%; }

  .hugePlus-u-before4of5,
  .hugePlus-u-before8of10 {
    margin-left: 80%; }

  .hugePlus-u-before5of6,
  .hugePlus-u-before10of12 {
    margin-left: 83.3333333333%; }

  .hugePlus-u-before7of8 {
    margin-left: 87.5%; }

  .hugePlus-u-before9of10 {
    margin-left: 90%; }

  .hugePlus-u-before11of12 {
    margin-left: 91.6666666667%; } }
@media only screen and (min-width: 1280px) {
  /*
      Specify the proportional offset before an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
  */
  .superHugePlus-u-before1of12 {
    margin-left: 8.3333333333%; }

  .superHugePlus-u-before1of10 {
    margin-left: 10%; }

  .superHugePlus-u-before1of8 {
    margin-left: 12.5%; }

  .superHugePlus-u-before1of6,
  .superHugePlus-u-before2of12 {
    margin-left: 16.6666666667%; }

  .superHugePlus-u-before1of5,
  .superHugePlus-u-before2of10 {
    margin-left: 20%; }

  .superHugePlus-u-before1of4,
  .superHugePlus-u-before2of8,
  .superHugePlus-u-before3of12 {
    margin-left: 25%; }

  .superHugePlus-u-before3of10 {
    margin-left: 30%; }

  .superHugePlus-u-before1of3,
  .superHugePlus-u-before2of6,
  .superHugePlus-u-before4of12 {
    margin-left: 33.3333333333%; }

  .superHugePlus-u-before3of8 {
    margin-left: 37.5%; }

  .superHugePlus-u-before2of5,
  .superHugePlus-u-before4of10 {
    margin-left: 40%; }

  .superHugePlus-u-before5of12 {
    margin-left: 41.6666666667%; }

  .superHugePlus-u-before1of2,
  .superHugePlus-u-before2of4,
  .superHugePlus-u-before3of6,
  .superHugePlus-u-before4of8,
  .superHugePlus-u-before5of10,
  .superHugePlus-u-before6of12 {
    margin-left: 50%; }

  .superHugePlus-u-before7of12 {
    margin-left: 58.3333333333%; }

  .superHugePlus-u-before3of5,
  .superHugePlus-u-before6of10 {
    margin-left: 60%; }

  .superHugePlus-u-before5of8 {
    margin-left: 62.5%; }

  .superHugePlus-u-before2of3,
  .superHugePlus-u-before4of6,
  .superHugePlus-u-before8of12 {
    margin-left: 66.6666666667%; }

  .superHugePlus-u-before7of10 {
    margin-left: 70%; }

  .superHugePlus-u-before3of4,
  .superHugePlus-u-before6of8,
  .superHugePlus-u-before9of12 {
    margin-left: 75%; }

  .superHugePlus-u-before4of5,
  .superHugePlus-u-before8of10 {
    margin-left: 80%; }

  .superHugePlus-u-before5of6,
  .superHugePlus-u-before10of12 {
    margin-left: 83.3333333333%; }

  .superHugePlus-u-before7of8 {
    margin-left: 87.5%; }

  .superHugePlus-u-before9of10 {
    margin-left: 90%; }

  .superHugePlus-u-before11of12 {
    margin-left: 91.6666666667%; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  /*
      Specify the proportional offset before an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
  */
  .aspectRatio15x9to16x9Landscape-u-before1of12 {
    margin-left: 8.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-before1of10 {
    margin-left: 10%; }

  .aspectRatio15x9to16x9Landscape-u-before1of8 {
    margin-left: 12.5%; }

  .aspectRatio15x9to16x9Landscape-u-before1of6,
  .aspectRatio15x9to16x9Landscape-u-before2of12 {
    margin-left: 16.6666666667%; }

  .aspectRatio15x9to16x9Landscape-u-before1of5,
  .aspectRatio15x9to16x9Landscape-u-before2of10 {
    margin-left: 20%; }

  .aspectRatio15x9to16x9Landscape-u-before1of4,
  .aspectRatio15x9to16x9Landscape-u-before2of8,
  .aspectRatio15x9to16x9Landscape-u-before3of12 {
    margin-left: 25%; }

  .aspectRatio15x9to16x9Landscape-u-before3of10 {
    margin-left: 30%; }

  .aspectRatio15x9to16x9Landscape-u-before1of3,
  .aspectRatio15x9to16x9Landscape-u-before2of6,
  .aspectRatio15x9to16x9Landscape-u-before4of12 {
    margin-left: 33.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-before3of8 {
    margin-left: 37.5%; }

  .aspectRatio15x9to16x9Landscape-u-before2of5,
  .aspectRatio15x9to16x9Landscape-u-before4of10 {
    margin-left: 40%; }

  .aspectRatio15x9to16x9Landscape-u-before5of12 {
    margin-left: 41.6666666667%; }

  .aspectRatio15x9to16x9Landscape-u-before1of2,
  .aspectRatio15x9to16x9Landscape-u-before2of4,
  .aspectRatio15x9to16x9Landscape-u-before3of6,
  .aspectRatio15x9to16x9Landscape-u-before4of8,
  .aspectRatio15x9to16x9Landscape-u-before5of10,
  .aspectRatio15x9to16x9Landscape-u-before6of12 {
    margin-left: 50%; }

  .aspectRatio15x9to16x9Landscape-u-before7of12 {
    margin-left: 58.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-before3of5,
  .aspectRatio15x9to16x9Landscape-u-before6of10 {
    margin-left: 60%; }

  .aspectRatio15x9to16x9Landscape-u-before5of8 {
    margin-left: 62.5%; }

  .aspectRatio15x9to16x9Landscape-u-before2of3,
  .aspectRatio15x9to16x9Landscape-u-before4of6,
  .aspectRatio15x9to16x9Landscape-u-before8of12 {
    margin-left: 66.6666666667%; }

  .aspectRatio15x9to16x9Landscape-u-before7of10 {
    margin-left: 70%; }

  .aspectRatio15x9to16x9Landscape-u-before3of4,
  .aspectRatio15x9to16x9Landscape-u-before6of8,
  .aspectRatio15x9to16x9Landscape-u-before9of12 {
    margin-left: 75%; }

  .aspectRatio15x9to16x9Landscape-u-before4of5,
  .aspectRatio15x9to16x9Landscape-u-before8of10 {
    margin-left: 80%; }

  .aspectRatio15x9to16x9Landscape-u-before5of6,
  .aspectRatio15x9to16x9Landscape-u-before10of12 {
    margin-left: 83.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-before7of8 {
    margin-left: 87.5%; }

  .aspectRatio15x9to16x9Landscape-u-before9of10 {
    margin-left: 90%; }

  .aspectRatio15x9to16x9Landscape-u-before11of12 {
    margin-left: 91.6666666667%; } }
/*
    Generates utils prefixed with $util-display-breakpoints:

    .u-hide
    .largePlus-u-hide
    .hugePlus-u-hide

    etc.
*/
/* Regular, non-responsive classes */
/*
* Hide visually and from screen readers:
* http://juicystudio.com/article/screen-readers-display-none.php
*/
.u-hide {
  display: none; }

.u-block {
  display: block; }

.u-table {
  display: table; }

.u-tableRow {
  display: table-row; }

.u-tableCell {
  display: table-cell; }

.u-inline {
  display: inline; }

.u-inlineBlock {
  display: inline-block; }

/* Hide for .no-js users */
.no-js .no-js-u-hide {
  display: none; }

/* Hide for .js users */
.js .js-u-hide {
  display: none; }

/* Show for .no-js users */
.no-js .no-js-u-block {
  display: block; }

/*
* Hide only visually, but have it available for screen readers:
* http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*/
.u-screenReaderOnly {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  /*
  * Hide visually and from screen readers:
  * http://juicystudio.com/article/screen-readers-display-none.php
  */
  .tinyPlus-u-hide {
    display: none; }

  .tinyPlus-u-block {
    display: block; }

  .tinyPlus-u-table {
    display: table; }

  .tinyPlus-u-tableRow {
    display: table-row; }

  .tinyPlus-u-tableCell {
    display: table-cell; }

  .tinyPlus-u-inline {
    display: inline; }

  .tinyPlus-u-inlineBlock {
    display: inline-block; } }
@media only screen and (min-width: 360px) {
  /*
  * Hide visually and from screen readers:
  * http://juicystudio.com/article/screen-readers-display-none.php
  */
  .smallPlus-u-hide {
    display: none; }

  .smallPlus-u-block {
    display: block; }

  .smallPlus-u-table {
    display: table; }

  .smallPlus-u-tableRow {
    display: table-row; }

  .smallPlus-u-tableCell {
    display: table-cell; }

  .smallPlus-u-inline {
    display: inline; }

  .smallPlus-u-inlineBlock {
    display: inline-block; } }
@media only screen and (min-width: 560px) {
  /*
  * Hide visually and from screen readers:
  * http://juicystudio.com/article/screen-readers-display-none.php
  */
  .mediumPlus-u-hide {
    display: none; }

  .mediumPlus-u-block {
    display: block; }

  .mediumPlus-u-table {
    display: table; }

  .mediumPlus-u-tableRow {
    display: table-row; }

  .mediumPlus-u-tableCell {
    display: table-cell; }

  .mediumPlus-u-inline {
    display: inline; }

  .mediumPlus-u-inlineBlock {
    display: inline-block; } }
@media only screen and (min-width: 760px) {
  /*
  * Hide visually and from screen readers:
  * http://juicystudio.com/article/screen-readers-display-none.php
  */
  .largePlus-u-hide {
    display: none; }

  .largePlus-u-block {
    display: block; }

  .largePlus-u-table {
    display: table; }

  .largePlus-u-tableRow {
    display: table-row; }

  .largePlus-u-tableCell {
    display: table-cell; }

  .largePlus-u-inline {
    display: inline; }

  .largePlus-u-inlineBlock {
    display: inline-block; } }
@media only screen and (min-width: 1024px) {
  /*
  * Hide visually and from screen readers:
  * http://juicystudio.com/article/screen-readers-display-none.php
  */
  .hugePlus-u-hide {
    display: none; }

  .hugePlus-u-block {
    display: block; }

  .hugePlus-u-table {
    display: table; }

  .hugePlus-u-tableRow {
    display: table-row; }

  .hugePlus-u-tableCell {
    display: table-cell; }

  .hugePlus-u-inline {
    display: inline; }

  .hugePlus-u-inlineBlock {
    display: inline-block; } }
@media only screen and (min-width: 1280px) {
  /*
  * Hide visually and from screen readers:
  * http://juicystudio.com/article/screen-readers-display-none.php
  */
  .superHugePlus-u-hide {
    display: none; }

  .superHugePlus-u-block {
    display: block; }

  .superHugePlus-u-table {
    display: table; }

  .superHugePlus-u-tableRow {
    display: table-row; }

  .superHugePlus-u-tableCell {
    display: table-cell; }

  .superHugePlus-u-inline {
    display: inline; }

  .superHugePlus-u-inlineBlock {
    display: inline-block; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  /*
  * Hide visually and from screen readers:
  * http://juicystudio.com/article/screen-readers-display-none.php
  */
  .aspectRatio15x9to16x9Landscape-u-hide {
    display: none; }

  .aspectRatio15x9to16x9Landscape-u-block {
    display: block; }

  .aspectRatio15x9to16x9Landscape-u-table {
    display: table; }

  .aspectRatio15x9to16x9Landscape-u-tableRow {
    display: table-row; }

  .aspectRatio15x9to16x9Landscape-u-tableCell {
    display: table-cell; }

  .aspectRatio15x9to16x9Landscape-u-inline {
    display: inline; }

  .aspectRatio15x9to16x9Landscape-u-inlineBlock {
    display: inline-block; } }
.u-imageReplace {
  text-indent: -9999px;
  direction: ltr; }

/*
    Generates utils prefixed with $util-layout-breakpoints:

    .u-floatRight
    .largePlus-u-floatRight
    .hugePlus-u-floatRight

    etc.
*/
/* Regular, non-responsive classes */
.u-floatRight {
  float: right; }

.u-floatLeft {
  float: left; }

.u-floatNone {
  float: none; }

.u-clearfix:before,
.u-clearfix:after {
  content: " ";
  display: table; }

.u-clearfix:after {
  clear: both; }

.u-centerBlock {
  margin-left: auto;
  margin-right: auto; }

.u-clearBoth {
  clear: both; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  .tinyPlus-u-floatRight {
    float: right; }

  .tinyPlus-u-floatLeft {
    float: left; }

  .tinyPlus-u-floatNone {
    float: none; }

  .tinyPlus-u-clearfix:before,
  .tinyPlus-u-clearfix:after {
    content: " ";
    display: table; }

  .tinyPlus-u-clearfix:after {
    clear: both; }

  .tinyPlus-u-centerBlock {
    margin-left: auto;
    margin-right: auto; }

  .tinyPlus-u-clearBoth {
    clear: both; } }
@media only screen and (min-width: 360px) {
  .smallPlus-u-floatRight {
    float: right; }

  .smallPlus-u-floatLeft {
    float: left; }

  .smallPlus-u-floatNone {
    float: none; }

  .smallPlus-u-clearfix:before,
  .smallPlus-u-clearfix:after {
    content: " ";
    display: table; }

  .smallPlus-u-clearfix:after {
    clear: both; }

  .smallPlus-u-centerBlock {
    margin-left: auto;
    margin-right: auto; }

  .smallPlus-u-clearBoth {
    clear: both; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-u-floatRight {
    float: right; }

  .mediumPlus-u-floatLeft {
    float: left; }

  .mediumPlus-u-floatNone {
    float: none; }

  .mediumPlus-u-clearfix:before,
  .mediumPlus-u-clearfix:after {
    content: " ";
    display: table; }

  .mediumPlus-u-clearfix:after {
    clear: both; }

  .mediumPlus-u-centerBlock {
    margin-left: auto;
    margin-right: auto; }

  .mediumPlus-u-clearBoth {
    clear: both; } }
@media only screen and (min-width: 760px) {
  .largePlus-u-floatRight {
    float: right; }

  .largePlus-u-floatLeft {
    float: left; }

  .largePlus-u-floatNone {
    float: none; }

  .largePlus-u-clearfix:before,
  .largePlus-u-clearfix:after {
    content: " ";
    display: table; }

  .largePlus-u-clearfix:after {
    clear: both; }

  .largePlus-u-centerBlock {
    margin-left: auto;
    margin-right: auto; }

  .largePlus-u-clearBoth {
    clear: both; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-u-floatRight {
    float: right; }

  .hugePlus-u-floatLeft {
    float: left; }

  .hugePlus-u-floatNone {
    float: none; }

  .hugePlus-u-clearfix:before,
  .hugePlus-u-clearfix:after {
    content: " ";
    display: table; }

  .hugePlus-u-clearfix:after {
    clear: both; }

  .hugePlus-u-centerBlock {
    margin-left: auto;
    margin-right: auto; }

  .hugePlus-u-clearBoth {
    clear: both; } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-u-floatRight {
    float: right; }

  .superHugePlus-u-floatLeft {
    float: left; }

  .superHugePlus-u-floatNone {
    float: none; }

  .superHugePlus-u-clearfix:before,
  .superHugePlus-u-clearfix:after {
    content: " ";
    display: table; }

  .superHugePlus-u-clearfix:after {
    clear: both; }

  .superHugePlus-u-centerBlock {
    margin-left: auto;
    margin-right: auto; }

  .superHugePlus-u-clearBoth {
    clear: both; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-u-floatRight {
    float: right; }

  .aspectRatio15x9to16x9Landscape-u-floatLeft {
    float: left; }

  .aspectRatio15x9to16x9Landscape-u-floatNone {
    float: none; }

  .aspectRatio15x9to16x9Landscape-u-clearfix:before,
  .aspectRatio15x9to16x9Landscape-u-clearfix:after {
    content: " ";
    display: table; }

  .aspectRatio15x9to16x9Landscape-u-clearfix:after {
    clear: both; }

  .aspectRatio15x9to16x9Landscape-u-centerBlock {
    margin-left: auto;
    margin-right: auto; }

  .aspectRatio15x9to16x9Landscape-u-clearBoth {
    clear: both; } }
/*
    Generates utils prefixed with $util-margin-breakpoints:

    .u-noMarginBottom
    .largePlus-u-noMarginBottom
    .hugePlus-u-noMarginBottom

    etc.
*/
/* Regular, non-responsive classes */
.u-noMarginBottom {
  margin-bottom: 0; }

.u-noMarginTop {
  margin-top: 0; }

.u-noMarginLeft {
  margin-left: 0; }

.u-noMarginRight {
  margin-right: 0; }

.u-noMarginVertical {
  margin-top: 0;
  margin-bottom: 0; }

.u-noMarginHorizontal {
  margin-left: 0;
  margin-right: 0; }

.u-noMargin {
  margin: 0; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  .tinyPlus-u-noMarginBottom {
    margin-bottom: 0; }

  .tinyPlus-u-noMarginTop {
    margin-top: 0; }

  .tinyPlus-u-noMarginLeft {
    margin-left: 0; }

  .tinyPlus-u-noMarginRight {
    margin-right: 0; }

  .tinyPlus-u-noMarginVertical {
    margin-top: 0;
    margin-bottom: 0; }

  .tinyPlus-u-noMarginHorizontal {
    margin-left: 0;
    margin-right: 0; }

  .tinyPlus-u-noMargin {
    margin: 0; } }
@media only screen and (min-width: 360px) {
  .smallPlus-u-noMarginBottom {
    margin-bottom: 0; }

  .smallPlus-u-noMarginTop {
    margin-top: 0; }

  .smallPlus-u-noMarginLeft {
    margin-left: 0; }

  .smallPlus-u-noMarginRight {
    margin-right: 0; }

  .smallPlus-u-noMarginVertical {
    margin-top: 0;
    margin-bottom: 0; }

  .smallPlus-u-noMarginHorizontal {
    margin-left: 0;
    margin-right: 0; }

  .smallPlus-u-noMargin {
    margin: 0; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-u-noMarginBottom {
    margin-bottom: 0; }

  .mediumPlus-u-noMarginTop {
    margin-top: 0; }

  .mediumPlus-u-noMarginLeft {
    margin-left: 0; }

  .mediumPlus-u-noMarginRight {
    margin-right: 0; }

  .mediumPlus-u-noMarginVertical {
    margin-top: 0;
    margin-bottom: 0; }

  .mediumPlus-u-noMarginHorizontal {
    margin-left: 0;
    margin-right: 0; }

  .mediumPlus-u-noMargin {
    margin: 0; } }
@media only screen and (min-width: 760px) {
  .largePlus-u-noMarginBottom {
    margin-bottom: 0; }

  .largePlus-u-noMarginTop {
    margin-top: 0; }

  .largePlus-u-noMarginLeft {
    margin-left: 0; }

  .largePlus-u-noMarginRight {
    margin-right: 0; }

  .largePlus-u-noMarginVertical {
    margin-top: 0;
    margin-bottom: 0; }

  .largePlus-u-noMarginHorizontal {
    margin-left: 0;
    margin-right: 0; }

  .largePlus-u-noMargin {
    margin: 0; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-u-noMarginBottom {
    margin-bottom: 0; }

  .hugePlus-u-noMarginTop {
    margin-top: 0; }

  .hugePlus-u-noMarginLeft {
    margin-left: 0; }

  .hugePlus-u-noMarginRight {
    margin-right: 0; }

  .hugePlus-u-noMarginVertical {
    margin-top: 0;
    margin-bottom: 0; }

  .hugePlus-u-noMarginHorizontal {
    margin-left: 0;
    margin-right: 0; }

  .hugePlus-u-noMargin {
    margin: 0; } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-u-noMarginBottom {
    margin-bottom: 0; }

  .superHugePlus-u-noMarginTop {
    margin-top: 0; }

  .superHugePlus-u-noMarginLeft {
    margin-left: 0; }

  .superHugePlus-u-noMarginRight {
    margin-right: 0; }

  .superHugePlus-u-noMarginVertical {
    margin-top: 0;
    margin-bottom: 0; }

  .superHugePlus-u-noMarginHorizontal {
    margin-left: 0;
    margin-right: 0; }

  .superHugePlus-u-noMargin {
    margin: 0; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-u-noMarginBottom {
    margin-bottom: 0; }

  .aspectRatio15x9to16x9Landscape-u-noMarginTop {
    margin-top: 0; }

  .aspectRatio15x9to16x9Landscape-u-noMarginLeft {
    margin-left: 0; }

  .aspectRatio15x9to16x9Landscape-u-noMarginRight {
    margin-right: 0; }

  .aspectRatio15x9to16x9Landscape-u-noMarginVertical {
    margin-top: 0;
    margin-bottom: 0; }

  .aspectRatio15x9to16x9Landscape-u-noMarginHorizontal {
    margin-left: 0;
    margin-right: 0; }

  .aspectRatio15x9to16x9Landscape-u-noMargin {
    margin: 0; } }
/*
    Generates utils prefixed with $util-padding-breakpoints:

    .u-noPaddingBottom
    .largePlus-u-noPaddingBottom
    .hugePlus-u-noPaddingBottom

    etc.
*/
/* Regular, non-responsive classes */
.u-noPaddingBottom {
  padding-bottom: 0; }

.u-noPaddingTop {
  padding-top: 0; }

.u-noPaddingLeft {
  padding-left: 0; }

.u-noPaddingRight {
  padding-right: 0; }

.u-noPaddingVertical {
  padding-top: 0;
  padding-bottom: 0; }

.u-noPaddingHorizontal {
  padding-left: 0;
  padding-right: 0; }

.u-noPadding {
  padding: 0; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  .tinyPlus-u-noPaddingBottom {
    padding-bottom: 0; }

  .tinyPlus-u-noPaddingTop {
    padding-top: 0; }

  .tinyPlus-u-noPaddingLeft {
    padding-left: 0; }

  .tinyPlus-u-noPaddingRight {
    padding-right: 0; }

  .tinyPlus-u-noPaddingVertical {
    padding-top: 0;
    padding-bottom: 0; }

  .tinyPlus-u-noPaddingHorizontal {
    padding-left: 0;
    padding-right: 0; }

  .tinyPlus-u-noPadding {
    padding: 0; } }
@media only screen and (min-width: 360px) {
  .smallPlus-u-noPaddingBottom {
    padding-bottom: 0; }

  .smallPlus-u-noPaddingTop {
    padding-top: 0; }

  .smallPlus-u-noPaddingLeft {
    padding-left: 0; }

  .smallPlus-u-noPaddingRight {
    padding-right: 0; }

  .smallPlus-u-noPaddingVertical {
    padding-top: 0;
    padding-bottom: 0; }

  .smallPlus-u-noPaddingHorizontal {
    padding-left: 0;
    padding-right: 0; }

  .smallPlus-u-noPadding {
    padding: 0; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-u-noPaddingBottom {
    padding-bottom: 0; }

  .mediumPlus-u-noPaddingTop {
    padding-top: 0; }

  .mediumPlus-u-noPaddingLeft {
    padding-left: 0; }

  .mediumPlus-u-noPaddingRight {
    padding-right: 0; }

  .mediumPlus-u-noPaddingVertical {
    padding-top: 0;
    padding-bottom: 0; }

  .mediumPlus-u-noPaddingHorizontal {
    padding-left: 0;
    padding-right: 0; }

  .mediumPlus-u-noPadding {
    padding: 0; } }
@media only screen and (min-width: 760px) {
  .largePlus-u-noPaddingBottom {
    padding-bottom: 0; }

  .largePlus-u-noPaddingTop {
    padding-top: 0; }

  .largePlus-u-noPaddingLeft {
    padding-left: 0; }

  .largePlus-u-noPaddingRight {
    padding-right: 0; }

  .largePlus-u-noPaddingVertical {
    padding-top: 0;
    padding-bottom: 0; }

  .largePlus-u-noPaddingHorizontal {
    padding-left: 0;
    padding-right: 0; }

  .largePlus-u-noPadding {
    padding: 0; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-u-noPaddingBottom {
    padding-bottom: 0; }

  .hugePlus-u-noPaddingTop {
    padding-top: 0; }

  .hugePlus-u-noPaddingLeft {
    padding-left: 0; }

  .hugePlus-u-noPaddingRight {
    padding-right: 0; }

  .hugePlus-u-noPaddingVertical {
    padding-top: 0;
    padding-bottom: 0; }

  .hugePlus-u-noPaddingHorizontal {
    padding-left: 0;
    padding-right: 0; }

  .hugePlus-u-noPadding {
    padding: 0; } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-u-noPaddingBottom {
    padding-bottom: 0; }

  .superHugePlus-u-noPaddingTop {
    padding-top: 0; }

  .superHugePlus-u-noPaddingLeft {
    padding-left: 0; }

  .superHugePlus-u-noPaddingRight {
    padding-right: 0; }

  .superHugePlus-u-noPaddingVertical {
    padding-top: 0;
    padding-bottom: 0; }

  .superHugePlus-u-noPaddingHorizontal {
    padding-left: 0;
    padding-right: 0; }

  .superHugePlus-u-noPadding {
    padding: 0; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-u-noPaddingBottom {
    padding-bottom: 0; }

  .aspectRatio15x9to16x9Landscape-u-noPaddingTop {
    padding-top: 0; }

  .aspectRatio15x9to16x9Landscape-u-noPaddingLeft {
    padding-left: 0; }

  .aspectRatio15x9to16x9Landscape-u-noPaddingRight {
    padding-right: 0; }

  .aspectRatio15x9to16x9Landscape-u-noPaddingVertical {
    padding-top: 0;
    padding-bottom: 0; }

  .aspectRatio15x9to16x9Landscape-u-noPaddingHorizontal {
    padding-left: 0;
    padding-right: 0; }

  .aspectRatio15x9to16x9Landscape-u-noPadding {
    padding: 0; } }
/*
    Generates utils prefixed with $util-position-breakpoints:

    .u-posRelative
    .largePlus-u-posRelative
    .hugePlus-u-posRelative

    etc.
*/
/*
    Regular, non-responsive classes
*/
.u-posAbsolute {
  position: absolute; }

/*
    Pins to all corners by default. But when a width and/or height are
    provided, the element will be centered in its nearest relatively-positioned
    ancestor.
*/
.u-posAbsoluteCenter {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0; }

/*
    1. Make sure fixed elements are promoted into a new layer, for performance
    reasons.
*/
.u-posFixed {
  position: fixed;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  /* [1] */ }

.u-posRelative {
  position: relative; }

.u-posStatic {
  position: static; }

/*
    Responsive classes
*/
@media only screen and (min-width: 0px) {
  .tinyPlus-u-posAbsolute {
    position: absolute; }

  /*
      Pins to all corners by default. But when a width and/or height are
      provided, the element will be centered in its nearest relatively-positioned
      ancestor.
  */
  .tinyPlus-u-posAbsoluteCenter {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0; }

  /*
      1. Make sure fixed elements are promoted into a new layer, for performance
      reasons.
  */
  .tinyPlus-u-posFixed {
    position: fixed;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    /* [1] */ }

  .tinyPlus-u-posRelative {
    position: relative; }

  .tinyPlus-u-posStatic {
    position: static; } }
@media only screen and (min-width: 360px) {
  .smallPlus-u-posAbsolute {
    position: absolute; }

  /*
      Pins to all corners by default. But when a width and/or height are
      provided, the element will be centered in its nearest relatively-positioned
      ancestor.
  */
  .smallPlus-u-posAbsoluteCenter {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0; }

  /*
      1. Make sure fixed elements are promoted into a new layer, for performance
      reasons.
  */
  .smallPlus-u-posFixed {
    position: fixed;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    /* [1] */ }

  .smallPlus-u-posRelative {
    position: relative; }

  .smallPlus-u-posStatic {
    position: static; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-u-posAbsolute {
    position: absolute; }

  /*
      Pins to all corners by default. But when a width and/or height are
      provided, the element will be centered in its nearest relatively-positioned
      ancestor.
  */
  .mediumPlus-u-posAbsoluteCenter {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0; }

  /*
      1. Make sure fixed elements are promoted into a new layer, for performance
      reasons.
  */
  .mediumPlus-u-posFixed {
    position: fixed;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    /* [1] */ }

  .mediumPlus-u-posRelative {
    position: relative; }

  .mediumPlus-u-posStatic {
    position: static; } }
@media only screen and (min-width: 760px) {
  .largePlus-u-posAbsolute {
    position: absolute; }

  /*
      Pins to all corners by default. But when a width and/or height are
      provided, the element will be centered in its nearest relatively-positioned
      ancestor.
  */
  .largePlus-u-posAbsoluteCenter {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0; }

  /*
      1. Make sure fixed elements are promoted into a new layer, for performance
      reasons.
  */
  .largePlus-u-posFixed {
    position: fixed;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    /* [1] */ }

  .largePlus-u-posRelative {
    position: relative; }

  .largePlus-u-posStatic {
    position: static; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-u-posAbsolute {
    position: absolute; }

  /*
      Pins to all corners by default. But when a width and/or height are
      provided, the element will be centered in its nearest relatively-positioned
      ancestor.
  */
  .hugePlus-u-posAbsoluteCenter {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0; }

  /*
      1. Make sure fixed elements are promoted into a new layer, for performance
      reasons.
  */
  .hugePlus-u-posFixed {
    position: fixed;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    /* [1] */ }

  .hugePlus-u-posRelative {
    position: relative; }

  .hugePlus-u-posStatic {
    position: static; } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-u-posAbsolute {
    position: absolute; }

  /*
      Pins to all corners by default. But when a width and/or height are
      provided, the element will be centered in its nearest relatively-positioned
      ancestor.
  */
  .superHugePlus-u-posAbsoluteCenter {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0; }

  /*
      1. Make sure fixed elements are promoted into a new layer, for performance
      reasons.
  */
  .superHugePlus-u-posFixed {
    position: fixed;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    /* [1] */ }

  .superHugePlus-u-posRelative {
    position: relative; }

  .superHugePlus-u-posStatic {
    position: static; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-u-posAbsolute {
    position: absolute; }

  /*
      Pins to all corners by default. But when a width and/or height are
      provided, the element will be centered in its nearest relatively-positioned
      ancestor.
  */
  .aspectRatio15x9to16x9Landscape-u-posAbsoluteCenter {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0; }

  /*
      1. Make sure fixed elements are promoted into a new layer, for performance
      reasons.
  */
  .aspectRatio15x9to16x9Landscape-u-posFixed {
    position: fixed;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    /* [1] */ }

  .aspectRatio15x9to16x9Landscape-u-posRelative {
    position: relative; }

  .aspectRatio15x9to16x9Landscape-u-posStatic {
    position: static; } }
/*
    Generates utils prefixed with $util-size-breakpoints:

    .u-size1of12
    .largePlus-u-size1of12
    .hugePlus-u-size1of12

    etc.
*/
/* Regular, non-responsive classes */
/*
    Make an element shrink wrap its content.
*/
.u-sizeFit,
.u-sizeFitAlt {
  display: block;
  float: left;
  width: auto; }

.u-sizeFitAlt {
  float: right; }

/*
    Make an element fill the remaining space.
    N.B. This will hide overflow.
*/
.u-sizeFill {
  display: block;
  overflow: hidden;
  width: auto; }

/**
    An alternative method to make an element fill the remaining space.
    N.B. Do not use if child elements might be wider than the remaining space.
    In Chrome, Safari, and Firefox it results in undesired layout.
*/
.u-sizeFillAlt {
  display: table-cell;
  max-width: 100%;
  width: 10000px; }

/*
    Make an element the width of its parent.
*/
.u-sizeFull {
  display: block;
  width: 100%; }

/* Proportional widths */
/*
    Specify the proportional width of an object.
    Intentional redundancy build into each set of unit classes.
    Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
*/
.u-size1of12 {
  width: 8.3333333333%; }

.u-size1of10 {
  width: 10%; }

.u-size1of8 {
  width: 12.5%; }

.u-size1of6,
.u-size2of12 {
  width: 16.6666666667%; }

.u-size1of5,
.u-size2of10 {
  width: 20%; }

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25%; }

.u-size3of10 {
  width: 30%; }

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: 33.3333333333%; }

.u-size3of8 {
  width: 37.5%; }

.u-size2of5,
.u-size4of10 {
  width: 40%; }

.u-size5of12 {
  width: 41.6666666667%; }

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50%; }

.u-size7of12 {
  width: 58.3333333333%; }

.u-size3of5,
.u-size6of10 {
  width: 60%; }

.u-size5of8 {
  width: 62.5%; }

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: 66.6666666667%; }

.u-size7of10 {
  width: 70%; }

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75%; }

.u-size4of5,
.u-size8of10 {
  width: 80%; }

.u-size5of6,
.u-size10of12 {
  width: 83.3333333333%; }

.u-size7of8 {
  width: 87.5%; }

.u-size9of10 {
  width: 90%; }

.u-size11of12 {
  width: 91.6666666667%; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  /*
      Make an element shrink wrap its content.
  */
  .tinyPlus-u-sizeFit,
  .tinyPlus-u-sizeFitAlt {
    display: block;
    float: left;
    width: auto; }

  .tinyPlus-u-sizeFitAlt {
    float: right; }

  /*
      Make an element fill the remaining space.
      N.B. This will hide overflow.
  */
  .tinyPlus-u-sizeFill {
    display: block;
    overflow: hidden;
    width: auto; }

  /**
      An alternative method to make an element fill the remaining space.
      N.B. Do not use if child elements might be wider than the remaining space.
      In Chrome, Safari, and Firefox it results in undesired layout.
  */
  .tinyPlus-u-sizeFillAlt {
    display: table-cell;
    max-width: 100%;
    width: 10000px; }

  /*
      Make an element the width of its parent.
  */
  .tinyPlus-u-sizeFull {
    display: block;
    width: 100%; }

  /* Proportional widths */
  /*
      Specify the proportional width of an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
  */
  .tinyPlus-u-size1of12 {
    width: 8.3333333333%; }

  .tinyPlus-u-size1of10 {
    width: 10%; }

  .tinyPlus-u-size1of8 {
    width: 12.5%; }

  .tinyPlus-u-size1of6,
  .tinyPlus-u-size2of12 {
    width: 16.6666666667%; }

  .tinyPlus-u-size1of5,
  .tinyPlus-u-size2of10 {
    width: 20%; }

  .tinyPlus-u-size1of4,
  .tinyPlus-u-size2of8,
  .tinyPlus-u-size3of12 {
    width: 25%; }

  .tinyPlus-u-size3of10 {
    width: 30%; }

  .tinyPlus-u-size1of3,
  .tinyPlus-u-size2of6,
  .tinyPlus-u-size4of12 {
    width: 33.3333333333%; }

  .tinyPlus-u-size3of8 {
    width: 37.5%; }

  .tinyPlus-u-size2of5,
  .tinyPlus-u-size4of10 {
    width: 40%; }

  .tinyPlus-u-size5of12 {
    width: 41.6666666667%; }

  .tinyPlus-u-size1of2,
  .tinyPlus-u-size2of4,
  .tinyPlus-u-size3of6,
  .tinyPlus-u-size4of8,
  .tinyPlus-u-size5of10,
  .tinyPlus-u-size6of12 {
    width: 50%; }

  .tinyPlus-u-size7of12 {
    width: 58.3333333333%; }

  .tinyPlus-u-size3of5,
  .tinyPlus-u-size6of10 {
    width: 60%; }

  .tinyPlus-u-size5of8 {
    width: 62.5%; }

  .tinyPlus-u-size2of3,
  .tinyPlus-u-size4of6,
  .tinyPlus-u-size8of12 {
    width: 66.6666666667%; }

  .tinyPlus-u-size7of10 {
    width: 70%; }

  .tinyPlus-u-size3of4,
  .tinyPlus-u-size6of8,
  .tinyPlus-u-size9of12 {
    width: 75%; }

  .tinyPlus-u-size4of5,
  .tinyPlus-u-size8of10 {
    width: 80%; }

  .tinyPlus-u-size5of6,
  .tinyPlus-u-size10of12 {
    width: 83.3333333333%; }

  .tinyPlus-u-size7of8 {
    width: 87.5%; }

  .tinyPlus-u-size9of10 {
    width: 90%; }

  .tinyPlus-u-size11of12 {
    width: 91.6666666667%; } }
@media only screen and (min-width: 360px) {
  /*
      Make an element shrink wrap its content.
  */
  .smallPlus-u-sizeFit,
  .smallPlus-u-sizeFitAlt {
    display: block;
    float: left;
    width: auto; }

  .smallPlus-u-sizeFitAlt {
    float: right; }

  /*
      Make an element fill the remaining space.
      N.B. This will hide overflow.
  */
  .smallPlus-u-sizeFill {
    display: block;
    overflow: hidden;
    width: auto; }

  /**
      An alternative method to make an element fill the remaining space.
      N.B. Do not use if child elements might be wider than the remaining space.
      In Chrome, Safari, and Firefox it results in undesired layout.
  */
  .smallPlus-u-sizeFillAlt {
    display: table-cell;
    max-width: 100%;
    width: 10000px; }

  /*
      Make an element the width of its parent.
  */
  .smallPlus-u-sizeFull {
    display: block;
    width: 100%; }

  /* Proportional widths */
  /*
      Specify the proportional width of an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
  */
  .smallPlus-u-size1of12 {
    width: 8.3333333333%; }

  .smallPlus-u-size1of10 {
    width: 10%; }

  .smallPlus-u-size1of8 {
    width: 12.5%; }

  .smallPlus-u-size1of6,
  .smallPlus-u-size2of12 {
    width: 16.6666666667%; }

  .smallPlus-u-size1of5,
  .smallPlus-u-size2of10 {
    width: 20%; }

  .smallPlus-u-size1of4,
  .smallPlus-u-size2of8,
  .smallPlus-u-size3of12 {
    width: 25%; }

  .smallPlus-u-size3of10 {
    width: 30%; }

  .smallPlus-u-size1of3,
  .smallPlus-u-size2of6,
  .smallPlus-u-size4of12 {
    width: 33.3333333333%; }

  .smallPlus-u-size3of8 {
    width: 37.5%; }

  .smallPlus-u-size2of5,
  .smallPlus-u-size4of10 {
    width: 40%; }

  .smallPlus-u-size5of12 {
    width: 41.6666666667%; }

  .smallPlus-u-size1of2,
  .smallPlus-u-size2of4,
  .smallPlus-u-size3of6,
  .smallPlus-u-size4of8,
  .smallPlus-u-size5of10,
  .smallPlus-u-size6of12 {
    width: 50%; }

  .smallPlus-u-size7of12 {
    width: 58.3333333333%; }

  .smallPlus-u-size3of5,
  .smallPlus-u-size6of10 {
    width: 60%; }

  .smallPlus-u-size5of8 {
    width: 62.5%; }

  .smallPlus-u-size2of3,
  .smallPlus-u-size4of6,
  .smallPlus-u-size8of12 {
    width: 66.6666666667%; }

  .smallPlus-u-size7of10 {
    width: 70%; }

  .smallPlus-u-size3of4,
  .smallPlus-u-size6of8,
  .smallPlus-u-size9of12 {
    width: 75%; }

  .smallPlus-u-size4of5,
  .smallPlus-u-size8of10 {
    width: 80%; }

  .smallPlus-u-size5of6,
  .smallPlus-u-size10of12 {
    width: 83.3333333333%; }

  .smallPlus-u-size7of8 {
    width: 87.5%; }

  .smallPlus-u-size9of10 {
    width: 90%; }

  .smallPlus-u-size11of12 {
    width: 91.6666666667%; } }
@media only screen and (min-width: 560px) {
  /*
      Make an element shrink wrap its content.
  */
  .mediumPlus-u-sizeFit,
  .mediumPlus-u-sizeFitAlt {
    display: block;
    float: left;
    width: auto; }

  .mediumPlus-u-sizeFitAlt {
    float: right; }

  /*
      Make an element fill the remaining space.
      N.B. This will hide overflow.
  */
  .mediumPlus-u-sizeFill {
    display: block;
    overflow: hidden;
    width: auto; }

  /**
      An alternative method to make an element fill the remaining space.
      N.B. Do not use if child elements might be wider than the remaining space.
      In Chrome, Safari, and Firefox it results in undesired layout.
  */
  .mediumPlus-u-sizeFillAlt {
    display: table-cell;
    max-width: 100%;
    width: 10000px; }

  /*
      Make an element the width of its parent.
  */
  .mediumPlus-u-sizeFull {
    display: block;
    width: 100%; }

  /* Proportional widths */
  /*
      Specify the proportional width of an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
  */
  .mediumPlus-u-size1of12 {
    width: 8.3333333333%; }

  .mediumPlus-u-size1of10 {
    width: 10%; }

  .mediumPlus-u-size1of8 {
    width: 12.5%; }

  .mediumPlus-u-size1of6,
  .mediumPlus-u-size2of12 {
    width: 16.6666666667%; }

  .mediumPlus-u-size1of5,
  .mediumPlus-u-size2of10 {
    width: 20%; }

  .mediumPlus-u-size1of4,
  .mediumPlus-u-size2of8,
  .mediumPlus-u-size3of12 {
    width: 25%; }

  .mediumPlus-u-size3of10 {
    width: 30%; }

  .mediumPlus-u-size1of3,
  .mediumPlus-u-size2of6,
  .mediumPlus-u-size4of12 {
    width: 33.3333333333%; }

  .mediumPlus-u-size3of8 {
    width: 37.5%; }

  .mediumPlus-u-size2of5,
  .mediumPlus-u-size4of10 {
    width: 40%; }

  .mediumPlus-u-size5of12 {
    width: 41.6666666667%; }

  .mediumPlus-u-size1of2,
  .mediumPlus-u-size2of4,
  .mediumPlus-u-size3of6,
  .mediumPlus-u-size4of8,
  .mediumPlus-u-size5of10,
  .mediumPlus-u-size6of12 {
    width: 50%; }

  .mediumPlus-u-size7of12 {
    width: 58.3333333333%; }

  .mediumPlus-u-size3of5,
  .mediumPlus-u-size6of10 {
    width: 60%; }

  .mediumPlus-u-size5of8 {
    width: 62.5%; }

  .mediumPlus-u-size2of3,
  .mediumPlus-u-size4of6,
  .mediumPlus-u-size8of12 {
    width: 66.6666666667%; }

  .mediumPlus-u-size7of10 {
    width: 70%; }

  .mediumPlus-u-size3of4,
  .mediumPlus-u-size6of8,
  .mediumPlus-u-size9of12 {
    width: 75%; }

  .mediumPlus-u-size4of5,
  .mediumPlus-u-size8of10 {
    width: 80%; }

  .mediumPlus-u-size5of6,
  .mediumPlus-u-size10of12 {
    width: 83.3333333333%; }

  .mediumPlus-u-size7of8 {
    width: 87.5%; }

  .mediumPlus-u-size9of10 {
    width: 90%; }

  .mediumPlus-u-size11of12 {
    width: 91.6666666667%; } }
@media only screen and (min-width: 760px) {
  /*
      Make an element shrink wrap its content.
  */
  .largePlus-u-sizeFit,
  .largePlus-u-sizeFitAlt {
    display: block;
    float: left;
    width: auto; }

  .largePlus-u-sizeFitAlt {
    float: right; }

  /*
      Make an element fill the remaining space.
      N.B. This will hide overflow.
  */
  .largePlus-u-sizeFill {
    display: block;
    overflow: hidden;
    width: auto; }

  /**
      An alternative method to make an element fill the remaining space.
      N.B. Do not use if child elements might be wider than the remaining space.
      In Chrome, Safari, and Firefox it results in undesired layout.
  */
  .largePlus-u-sizeFillAlt {
    display: table-cell;
    max-width: 100%;
    width: 10000px; }

  /*
      Make an element the width of its parent.
  */
  .largePlus-u-sizeFull {
    display: block;
    width: 100%; }

  /* Proportional widths */
  /*
      Specify the proportional width of an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
  */
  .largePlus-u-size1of12 {
    width: 8.3333333333%; }

  .largePlus-u-size1of10 {
    width: 10%; }

  .largePlus-u-size1of8 {
    width: 12.5%; }

  .largePlus-u-size1of6,
  .largePlus-u-size2of12 {
    width: 16.6666666667%; }

  .largePlus-u-size1of5,
  .largePlus-u-size2of10 {
    width: 20%; }

  .largePlus-u-size1of4,
  .largePlus-u-size2of8,
  .largePlus-u-size3of12 {
    width: 25%; }

  .largePlus-u-size3of10 {
    width: 30%; }

  .largePlus-u-size1of3,
  .largePlus-u-size2of6,
  .largePlus-u-size4of12 {
    width: 33.3333333333%; }

  .largePlus-u-size3of8 {
    width: 37.5%; }

  .largePlus-u-size2of5,
  .largePlus-u-size4of10 {
    width: 40%; }

  .largePlus-u-size5of12 {
    width: 41.6666666667%; }

  .largePlus-u-size1of2,
  .largePlus-u-size2of4,
  .largePlus-u-size3of6,
  .largePlus-u-size4of8,
  .largePlus-u-size5of10,
  .largePlus-u-size6of12 {
    width: 50%; }

  .largePlus-u-size7of12 {
    width: 58.3333333333%; }

  .largePlus-u-size3of5,
  .largePlus-u-size6of10 {
    width: 60%; }

  .largePlus-u-size5of8 {
    width: 62.5%; }

  .largePlus-u-size2of3,
  .largePlus-u-size4of6,
  .largePlus-u-size8of12 {
    width: 66.6666666667%; }

  .largePlus-u-size7of10 {
    width: 70%; }

  .largePlus-u-size3of4,
  .largePlus-u-size6of8,
  .largePlus-u-size9of12 {
    width: 75%; }

  .largePlus-u-size4of5,
  .largePlus-u-size8of10 {
    width: 80%; }

  .largePlus-u-size5of6,
  .largePlus-u-size10of12 {
    width: 83.3333333333%; }

  .largePlus-u-size7of8 {
    width: 87.5%; }

  .largePlus-u-size9of10 {
    width: 90%; }

  .largePlus-u-size11of12 {
    width: 91.6666666667%; } }
@media only screen and (min-width: 1024px) {
  /*
      Make an element shrink wrap its content.
  */
  .hugePlus-u-sizeFit,
  .hugePlus-u-sizeFitAlt {
    display: block;
    float: left;
    width: auto; }

  .hugePlus-u-sizeFitAlt {
    float: right; }

  /*
      Make an element fill the remaining space.
      N.B. This will hide overflow.
  */
  .hugePlus-u-sizeFill {
    display: block;
    overflow: hidden;
    width: auto; }

  /**
      An alternative method to make an element fill the remaining space.
      N.B. Do not use if child elements might be wider than the remaining space.
      In Chrome, Safari, and Firefox it results in undesired layout.
  */
  .hugePlus-u-sizeFillAlt {
    display: table-cell;
    max-width: 100%;
    width: 10000px; }

  /*
      Make an element the width of its parent.
  */
  .hugePlus-u-sizeFull {
    display: block;
    width: 100%; }

  /* Proportional widths */
  /*
      Specify the proportional width of an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
  */
  .hugePlus-u-size1of12 {
    width: 8.3333333333%; }

  .hugePlus-u-size1of10 {
    width: 10%; }

  .hugePlus-u-size1of8 {
    width: 12.5%; }

  .hugePlus-u-size1of6,
  .hugePlus-u-size2of12 {
    width: 16.6666666667%; }

  .hugePlus-u-size1of5,
  .hugePlus-u-size2of10 {
    width: 20%; }

  .hugePlus-u-size1of4,
  .hugePlus-u-size2of8,
  .hugePlus-u-size3of12 {
    width: 25%; }

  .hugePlus-u-size3of10 {
    width: 30%; }

  .hugePlus-u-size1of3,
  .hugePlus-u-size2of6,
  .hugePlus-u-size4of12 {
    width: 33.3333333333%; }

  .hugePlus-u-size3of8 {
    width: 37.5%; }

  .hugePlus-u-size2of5,
  .hugePlus-u-size4of10 {
    width: 40%; }

  .hugePlus-u-size5of12 {
    width: 41.6666666667%; }

  .hugePlus-u-size1of2,
  .hugePlus-u-size2of4,
  .hugePlus-u-size3of6,
  .hugePlus-u-size4of8,
  .hugePlus-u-size5of10,
  .hugePlus-u-size6of12 {
    width: 50%; }

  .hugePlus-u-size7of12 {
    width: 58.3333333333%; }

  .hugePlus-u-size3of5,
  .hugePlus-u-size6of10 {
    width: 60%; }

  .hugePlus-u-size5of8 {
    width: 62.5%; }

  .hugePlus-u-size2of3,
  .hugePlus-u-size4of6,
  .hugePlus-u-size8of12 {
    width: 66.6666666667%; }

  .hugePlus-u-size7of10 {
    width: 70%; }

  .hugePlus-u-size3of4,
  .hugePlus-u-size6of8,
  .hugePlus-u-size9of12 {
    width: 75%; }

  .hugePlus-u-size4of5,
  .hugePlus-u-size8of10 {
    width: 80%; }

  .hugePlus-u-size5of6,
  .hugePlus-u-size10of12 {
    width: 83.3333333333%; }

  .hugePlus-u-size7of8 {
    width: 87.5%; }

  .hugePlus-u-size9of10 {
    width: 90%; }

  .hugePlus-u-size11of12 {
    width: 91.6666666667%; } }
@media only screen and (min-width: 1280px) {
  /*
      Make an element shrink wrap its content.
  */
  .superHugePlus-u-sizeFit,
  .superHugePlus-u-sizeFitAlt {
    display: block;
    float: left;
    width: auto; }

  .superHugePlus-u-sizeFitAlt {
    float: right; }

  /*
      Make an element fill the remaining space.
      N.B. This will hide overflow.
  */
  .superHugePlus-u-sizeFill {
    display: block;
    overflow: hidden;
    width: auto; }

  /**
      An alternative method to make an element fill the remaining space.
      N.B. Do not use if child elements might be wider than the remaining space.
      In Chrome, Safari, and Firefox it results in undesired layout.
  */
  .superHugePlus-u-sizeFillAlt {
    display: table-cell;
    max-width: 100%;
    width: 10000px; }

  /*
      Make an element the width of its parent.
  */
  .superHugePlus-u-sizeFull {
    display: block;
    width: 100%; }

  /* Proportional widths */
  /*
      Specify the proportional width of an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
  */
  .superHugePlus-u-size1of12 {
    width: 8.3333333333%; }

  .superHugePlus-u-size1of10 {
    width: 10%; }

  .superHugePlus-u-size1of8 {
    width: 12.5%; }

  .superHugePlus-u-size1of6,
  .superHugePlus-u-size2of12 {
    width: 16.6666666667%; }

  .superHugePlus-u-size1of5,
  .superHugePlus-u-size2of10 {
    width: 20%; }

  .superHugePlus-u-size1of4,
  .superHugePlus-u-size2of8,
  .superHugePlus-u-size3of12 {
    width: 25%; }

  .superHugePlus-u-size3of10 {
    width: 30%; }

  .superHugePlus-u-size1of3,
  .superHugePlus-u-size2of6,
  .superHugePlus-u-size4of12 {
    width: 33.3333333333%; }

  .superHugePlus-u-size3of8 {
    width: 37.5%; }

  .superHugePlus-u-size2of5,
  .superHugePlus-u-size4of10 {
    width: 40%; }

  .superHugePlus-u-size5of12 {
    width: 41.6666666667%; }

  .superHugePlus-u-size1of2,
  .superHugePlus-u-size2of4,
  .superHugePlus-u-size3of6,
  .superHugePlus-u-size4of8,
  .superHugePlus-u-size5of10,
  .superHugePlus-u-size6of12 {
    width: 50%; }

  .superHugePlus-u-size7of12 {
    width: 58.3333333333%; }

  .superHugePlus-u-size3of5,
  .superHugePlus-u-size6of10 {
    width: 60%; }

  .superHugePlus-u-size5of8 {
    width: 62.5%; }

  .superHugePlus-u-size2of3,
  .superHugePlus-u-size4of6,
  .superHugePlus-u-size8of12 {
    width: 66.6666666667%; }

  .superHugePlus-u-size7of10 {
    width: 70%; }

  .superHugePlus-u-size3of4,
  .superHugePlus-u-size6of8,
  .superHugePlus-u-size9of12 {
    width: 75%; }

  .superHugePlus-u-size4of5,
  .superHugePlus-u-size8of10 {
    width: 80%; }

  .superHugePlus-u-size5of6,
  .superHugePlus-u-size10of12 {
    width: 83.3333333333%; }

  .superHugePlus-u-size7of8 {
    width: 87.5%; }

  .superHugePlus-u-size9of10 {
    width: 90%; }

  .superHugePlus-u-size11of12 {
    width: 91.6666666667%; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  /*
      Make an element shrink wrap its content.
  */
  .aspectRatio15x9to16x9Landscape-u-sizeFit,
  .aspectRatio15x9to16x9Landscape-u-sizeFitAlt {
    display: block;
    float: left;
    width: auto; }

  .aspectRatio15x9to16x9Landscape-u-sizeFitAlt {
    float: right; }

  /*
      Make an element fill the remaining space.
      N.B. This will hide overflow.
  */
  .aspectRatio15x9to16x9Landscape-u-sizeFill {
    display: block;
    overflow: hidden;
    width: auto; }

  /**
      An alternative method to make an element fill the remaining space.
      N.B. Do not use if child elements might be wider than the remaining space.
      In Chrome, Safari, and Firefox it results in undesired layout.
  */
  .aspectRatio15x9to16x9Landscape-u-sizeFillAlt {
    display: table-cell;
    max-width: 100%;
    width: 10000px; }

  /*
      Make an element the width of its parent.
  */
  .aspectRatio15x9to16x9Landscape-u-sizeFull {
    display: block;
    width: 100%; }

  /* Proportional widths */
  /*
      Specify the proportional width of an object.
      Intentional redundancy build into each set of unit classes.
      Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
  */
  .aspectRatio15x9to16x9Landscape-u-size1of12 {
    width: 8.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-size1of10 {
    width: 10%; }

  .aspectRatio15x9to16x9Landscape-u-size1of8 {
    width: 12.5%; }

  .aspectRatio15x9to16x9Landscape-u-size1of6,
  .aspectRatio15x9to16x9Landscape-u-size2of12 {
    width: 16.6666666667%; }

  .aspectRatio15x9to16x9Landscape-u-size1of5,
  .aspectRatio15x9to16x9Landscape-u-size2of10 {
    width: 20%; }

  .aspectRatio15x9to16x9Landscape-u-size1of4,
  .aspectRatio15x9to16x9Landscape-u-size2of8,
  .aspectRatio15x9to16x9Landscape-u-size3of12 {
    width: 25%; }

  .aspectRatio15x9to16x9Landscape-u-size3of10 {
    width: 30%; }

  .aspectRatio15x9to16x9Landscape-u-size1of3,
  .aspectRatio15x9to16x9Landscape-u-size2of6,
  .aspectRatio15x9to16x9Landscape-u-size4of12 {
    width: 33.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-size3of8 {
    width: 37.5%; }

  .aspectRatio15x9to16x9Landscape-u-size2of5,
  .aspectRatio15x9to16x9Landscape-u-size4of10 {
    width: 40%; }

  .aspectRatio15x9to16x9Landscape-u-size5of12 {
    width: 41.6666666667%; }

  .aspectRatio15x9to16x9Landscape-u-size1of2,
  .aspectRatio15x9to16x9Landscape-u-size2of4,
  .aspectRatio15x9to16x9Landscape-u-size3of6,
  .aspectRatio15x9to16x9Landscape-u-size4of8,
  .aspectRatio15x9to16x9Landscape-u-size5of10,
  .aspectRatio15x9to16x9Landscape-u-size6of12 {
    width: 50%; }

  .aspectRatio15x9to16x9Landscape-u-size7of12 {
    width: 58.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-size3of5,
  .aspectRatio15x9to16x9Landscape-u-size6of10 {
    width: 60%; }

  .aspectRatio15x9to16x9Landscape-u-size5of8 {
    width: 62.5%; }

  .aspectRatio15x9to16x9Landscape-u-size2of3,
  .aspectRatio15x9to16x9Landscape-u-size4of6,
  .aspectRatio15x9to16x9Landscape-u-size8of12 {
    width: 66.6666666667%; }

  .aspectRatio15x9to16x9Landscape-u-size7of10 {
    width: 70%; }

  .aspectRatio15x9to16x9Landscape-u-size3of4,
  .aspectRatio15x9to16x9Landscape-u-size6of8,
  .aspectRatio15x9to16x9Landscape-u-size9of12 {
    width: 75%; }

  .aspectRatio15x9to16x9Landscape-u-size4of5,
  .aspectRatio15x9to16x9Landscape-u-size8of10 {
    width: 80%; }

  .aspectRatio15x9to16x9Landscape-u-size5of6,
  .aspectRatio15x9to16x9Landscape-u-size10of12 {
    width: 83.3333333333%; }

  .aspectRatio15x9to16x9Landscape-u-size7of8 {
    width: 87.5%; }

  .aspectRatio15x9to16x9Landscape-u-size9of10 {
    width: 90%; }

  .aspectRatio15x9to16x9Landscape-u-size11of12 {
    width: 91.6666666667%; } }
/*
    Generates utils prefixed with $util-text-breakpoints:

    .u-textUppercase
    .largePlus-u-textUppercase
    .hugePlus-u-textUppercase

    etc.
*/
/* Regular, non-responsive classes */
.u-textUppercase {
  text-transform: uppercase; }

/*
    Word breaking
    Break strings when their length exceeds the width of their container.
*/
.u-textBreak {
  word-wrap: break-word; }

/*
    Horizontal text alignment
*/
.u-textCenter {
  text-align: center; }

.u-textLeft {
  text-align: left; }

.u-textRight {
  text-align: right; }

/*
    Inherit the ancestor's text color.
*/
.u-textInheritColor {
  color: inherit; }

/*
    Enables font kerning in all browsers.
    http://blog.typekit.com/2014/02/05/kerning-on-the-web/
    
    1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
    2. Chrome (not Windows), Firefox, IE 10+
    3. Safari 7 and future browsers
 */
.u-textKern {
  text-rendering: optimizeLegibility;
  /* 1 */
  font-feature-settings: "kern" 1;
  /* 2 */
  -webkit-font-kerning: normal;
          font-kerning: normal;
  /* 3 */ }

/*
    Prevent whitespace wrapping
*/
.u-textNoWrap {
  white-space: nowrap; }

/*
    Text truncation
    
    Prevent text from wrapping onto multiple lines, and truncate with an
    ellipsis.
    
    1. Ensure that the node has a maximum width after which truncation can
       occur.
    2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
       nodes.
 */
.u-textTruncate {
  max-width: 100%;
  /* 1 */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-wrap: normal;
  /* 2 */ }

/* Set on containers to override default link color to container's color */
.u-colorInherit a, .u-colorInherit a:hover, .u-colorInherit a:focus, .u-colorInherit a:visited,
.u-colorInherit p,
.u-colorInherit hr {
  color: inherit; }

/* Responsive classes */
@media only screen and (min-width: 0px) {
  .tinyPlus-u-textUppercase {
    text-transform: uppercase; }

  /*
      Word breaking
      Break strings when their length exceeds the width of their container.
  */
  .tinyPlus-u-textBreak {
    word-wrap: break-word; }

  /*
      Horizontal text alignment
  */
  .tinyPlus-u-textCenter {
    text-align: center; }

  .tinyPlus-u-textLeft {
    text-align: left; }

  .tinyPlus-u-textRight {
    text-align: right; }

  /*
      Inherit the ancestor's text color.
  */
  .tinyPlus-u-textInheritColor {
    color: inherit; }

  /*
      Enables font kerning in all browsers.
      http://blog.typekit.com/2014/02/05/kerning-on-the-web/
      
      1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
      2. Chrome (not Windows), Firefox, IE 10+
      3. Safari 7 and future browsers
   */
  .tinyPlus-u-textKern {
    text-rendering: optimizeLegibility;
    /* 1 */
    font-feature-settings: "kern" 1;
    /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal;
    /* 3 */ }

  /*
      Prevent whitespace wrapping
  */
  .tinyPlus-u-textNoWrap {
    white-space: nowrap; }

  /*
      Text truncation
      
      Prevent text from wrapping onto multiple lines, and truncate with an
      ellipsis.
      
      1. Ensure that the node has a maximum width after which truncation can
         occur.
      2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
         nodes.
   */
  .tinyPlus-u-textTruncate {
    max-width: 100%;
    /* 1 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    /* 2 */ } }
@media only screen and (min-width: 360px) {
  .smallPlus-u-textUppercase {
    text-transform: uppercase; }

  /*
      Word breaking
      Break strings when their length exceeds the width of their container.
  */
  .smallPlus-u-textBreak {
    word-wrap: break-word; }

  /*
      Horizontal text alignment
  */
  .smallPlus-u-textCenter {
    text-align: center; }

  .smallPlus-u-textLeft {
    text-align: left; }

  .smallPlus-u-textRight {
    text-align: right; }

  /*
      Inherit the ancestor's text color.
  */
  .smallPlus-u-textInheritColor {
    color: inherit; }

  /*
      Enables font kerning in all browsers.
      http://blog.typekit.com/2014/02/05/kerning-on-the-web/
      
      1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
      2. Chrome (not Windows), Firefox, IE 10+
      3. Safari 7 and future browsers
   */
  .smallPlus-u-textKern {
    text-rendering: optimizeLegibility;
    /* 1 */
    font-feature-settings: "kern" 1;
    /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal;
    /* 3 */ }

  /*
      Prevent whitespace wrapping
  */
  .smallPlus-u-textNoWrap {
    white-space: nowrap; }

  /*
      Text truncation
      
      Prevent text from wrapping onto multiple lines, and truncate with an
      ellipsis.
      
      1. Ensure that the node has a maximum width after which truncation can
         occur.
      2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
         nodes.
   */
  .smallPlus-u-textTruncate {
    max-width: 100%;
    /* 1 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    /* 2 */ } }
@media only screen and (min-width: 560px) {
  .mediumPlus-u-textUppercase {
    text-transform: uppercase; }

  /*
      Word breaking
      Break strings when their length exceeds the width of their container.
  */
  .mediumPlus-u-textBreak {
    word-wrap: break-word; }

  /*
      Horizontal text alignment
  */
  .mediumPlus-u-textCenter {
    text-align: center; }

  .mediumPlus-u-textLeft {
    text-align: left; }

  .mediumPlus-u-textRight {
    text-align: right; }

  /*
      Inherit the ancestor's text color.
  */
  .mediumPlus-u-textInheritColor {
    color: inherit; }

  /*
      Enables font kerning in all browsers.
      http://blog.typekit.com/2014/02/05/kerning-on-the-web/
      
      1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
      2. Chrome (not Windows), Firefox, IE 10+
      3. Safari 7 and future browsers
   */
  .mediumPlus-u-textKern {
    text-rendering: optimizeLegibility;
    /* 1 */
    font-feature-settings: "kern" 1;
    /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal;
    /* 3 */ }

  /*
      Prevent whitespace wrapping
  */
  .mediumPlus-u-textNoWrap {
    white-space: nowrap; }

  /*
      Text truncation
      
      Prevent text from wrapping onto multiple lines, and truncate with an
      ellipsis.
      
      1. Ensure that the node has a maximum width after which truncation can
         occur.
      2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
         nodes.
   */
  .mediumPlus-u-textTruncate {
    max-width: 100%;
    /* 1 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    /* 2 */ } }
@media only screen and (min-width: 760px) {
  .largePlus-u-textUppercase {
    text-transform: uppercase; }

  /*
      Word breaking
      Break strings when their length exceeds the width of their container.
  */
  .largePlus-u-textBreak {
    word-wrap: break-word; }

  /*
      Horizontal text alignment
  */
  .largePlus-u-textCenter {
    text-align: center; }

  .largePlus-u-textLeft {
    text-align: left; }

  .largePlus-u-textRight {
    text-align: right; }

  /*
      Inherit the ancestor's text color.
  */
  .largePlus-u-textInheritColor {
    color: inherit; }

  /*
      Enables font kerning in all browsers.
      http://blog.typekit.com/2014/02/05/kerning-on-the-web/
      
      1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
      2. Chrome (not Windows), Firefox, IE 10+
      3. Safari 7 and future browsers
   */
  .largePlus-u-textKern {
    text-rendering: optimizeLegibility;
    /* 1 */
    font-feature-settings: "kern" 1;
    /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal;
    /* 3 */ }

  /*
      Prevent whitespace wrapping
  */
  .largePlus-u-textNoWrap {
    white-space: nowrap; }

  /*
      Text truncation
      
      Prevent text from wrapping onto multiple lines, and truncate with an
      ellipsis.
      
      1. Ensure that the node has a maximum width after which truncation can
         occur.
      2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
         nodes.
   */
  .largePlus-u-textTruncate {
    max-width: 100%;
    /* 1 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    /* 2 */ } }
@media only screen and (min-width: 1024px) {
  .hugePlus-u-textUppercase {
    text-transform: uppercase; }

  /*
      Word breaking
      Break strings when their length exceeds the width of their container.
  */
  .hugePlus-u-textBreak {
    word-wrap: break-word; }

  /*
      Horizontal text alignment
  */
  .hugePlus-u-textCenter {
    text-align: center; }

  .hugePlus-u-textLeft {
    text-align: left; }

  .hugePlus-u-textRight {
    text-align: right; }

  /*
      Inherit the ancestor's text color.
  */
  .hugePlus-u-textInheritColor {
    color: inherit; }

  /*
      Enables font kerning in all browsers.
      http://blog.typekit.com/2014/02/05/kerning-on-the-web/
      
      1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
      2. Chrome (not Windows), Firefox, IE 10+
      3. Safari 7 and future browsers
   */
  .hugePlus-u-textKern {
    text-rendering: optimizeLegibility;
    /* 1 */
    font-feature-settings: "kern" 1;
    /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal;
    /* 3 */ }

  /*
      Prevent whitespace wrapping
  */
  .hugePlus-u-textNoWrap {
    white-space: nowrap; }

  /*
      Text truncation
      
      Prevent text from wrapping onto multiple lines, and truncate with an
      ellipsis.
      
      1. Ensure that the node has a maximum width after which truncation can
         occur.
      2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
         nodes.
   */
  .hugePlus-u-textTruncate {
    max-width: 100%;
    /* 1 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    /* 2 */ } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-u-textUppercase {
    text-transform: uppercase; }

  /*
      Word breaking
      Break strings when their length exceeds the width of their container.
  */
  .superHugePlus-u-textBreak {
    word-wrap: break-word; }

  /*
      Horizontal text alignment
  */
  .superHugePlus-u-textCenter {
    text-align: center; }

  .superHugePlus-u-textLeft {
    text-align: left; }

  .superHugePlus-u-textRight {
    text-align: right; }

  /*
      Inherit the ancestor's text color.
  */
  .superHugePlus-u-textInheritColor {
    color: inherit; }

  /*
      Enables font kerning in all browsers.
      http://blog.typekit.com/2014/02/05/kerning-on-the-web/
      
      1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
      2. Chrome (not Windows), Firefox, IE 10+
      3. Safari 7 and future browsers
   */
  .superHugePlus-u-textKern {
    text-rendering: optimizeLegibility;
    /* 1 */
    font-feature-settings: "kern" 1;
    /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal;
    /* 3 */ }

  /*
      Prevent whitespace wrapping
  */
  .superHugePlus-u-textNoWrap {
    white-space: nowrap; }

  /*
      Text truncation
      
      Prevent text from wrapping onto multiple lines, and truncate with an
      ellipsis.
      
      1. Ensure that the node has a maximum width after which truncation can
         occur.
      2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
         nodes.
   */
  .superHugePlus-u-textTruncate {
    max-width: 100%;
    /* 1 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    /* 2 */ } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-u-textUppercase {
    text-transform: uppercase; }

  /*
      Word breaking
      Break strings when their length exceeds the width of their container.
  */
  .aspectRatio15x9to16x9Landscape-u-textBreak {
    word-wrap: break-word; }

  /*
      Horizontal text alignment
  */
  .aspectRatio15x9to16x9Landscape-u-textCenter {
    text-align: center; }

  .aspectRatio15x9to16x9Landscape-u-textLeft {
    text-align: left; }

  .aspectRatio15x9to16x9Landscape-u-textRight {
    text-align: right; }

  /*
      Inherit the ancestor's text color.
  */
  .aspectRatio15x9to16x9Landscape-u-textInheritColor {
    color: inherit; }

  /*
      Enables font kerning in all browsers.
      http://blog.typekit.com/2014/02/05/kerning-on-the-web/
      
      1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
      2. Chrome (not Windows), Firefox, IE 10+
      3. Safari 7 and future browsers
   */
  .aspectRatio15x9to16x9Landscape-u-textKern {
    text-rendering: optimizeLegibility;
    /* 1 */
    font-feature-settings: "kern" 1;
    /* 2 */
    -webkit-font-kerning: normal;
            font-kerning: normal;
    /* 3 */ }

  /*
      Prevent whitespace wrapping
  */
  .aspectRatio15x9to16x9Landscape-u-textNoWrap {
    white-space: nowrap; }

  /*
      Text truncation
      
      Prevent text from wrapping onto multiple lines, and truncate with an
      ellipsis.
      
      1. Ensure that the node has a maximum width after which truncation can
         occur.
      2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
         nodes.
   */
  .aspectRatio15x9to16x9Landscape-u-textTruncate {
    max-width: 100%;
    /* 1 */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    /* 2 */ } }
/*
    Generates utils prefixed with $util-width-breakpoints:

    .u-widthFull
    .largePlus-u-widthFull
    .hugePlus-u-widthFull

    etc.
*/
/* Regular, non-responsive util classes */
.u-widthFull {
  width: 100%;
  height: auto; }

.u-widthAuto {
  width: auto; }

/* Responsive util classes */
@media only screen and (min-width: 0px) {
  .tinyPlus-u-widthFull {
    width: 100%;
    height: auto; }

  .tinyPlus-u-widthAuto {
    width: auto; } }
@media only screen and (min-width: 360px) {
  .smallPlus-u-widthFull {
    width: 100%;
    height: auto; }

  .smallPlus-u-widthAuto {
    width: auto; } }
@media only screen and (min-width: 560px) {
  .mediumPlus-u-widthFull {
    width: 100%;
    height: auto; }

  .mediumPlus-u-widthAuto {
    width: auto; } }
@media only screen and (min-width: 760px) {
  .largePlus-u-widthFull {
    width: 100%;
    height: auto; }

  .largePlus-u-widthAuto {
    width: auto; } }
@media only screen and (min-width: 1024px) {
  .hugePlus-u-widthFull {
    width: 100%;
    height: auto; }

  .hugePlus-u-widthAuto {
    width: auto; } }
@media only screen and (min-width: 1280px) {
  .superHugePlus-u-widthFull {
    width: 100%;
    height: auto; }

  .superHugePlus-u-widthAuto {
    width: auto; } }
@media only screen and (max-width: 1024px) and (min-aspect-ratio: 15 / 9) and (orientation: landscape) {
  .aspectRatio15x9to16x9Landscape-u-widthFull {
    width: 100%;
    height: auto; }

  .aspectRatio15x9to16x9Landscape-u-widthAuto {
    width: auto; } }
